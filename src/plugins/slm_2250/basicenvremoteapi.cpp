/****************************************************************************
**
** Metadata for BasicEnvRemoteAPI generated by dumpcpp from type library
** BasicEnvRemoteApi.tlb
**
****************************************************************************/

#define QAX_DUMPCPP_BASICENVREMOTEAPI_NOINLINES
#include "basicenvremoteapi.h"

using namespace BasicEnvRemoteAPI;

static const uint qt_meta_data_BasicEnvRemoteAPI__IRemoteAPI[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       22,    10, // methods
       7,    120, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       30, 69, 91, 92, 5,
       93, 118, 123, 124, 5,
       125, 151, 166, 167, 5,

 // slots: signature, parameters, type, tag, flags
       168, 176, 177, 178, 9,
       179, 196, 211, 212, 9,
       213, 226, 227, 228, 9,
       229, 253, 265, 266, 9,
       267, 312, 341, 342, 9,
       343, 369, 383, 387, 9,
       388, 415, 429, 433, 9,
       434, 461, 475, 479, 9,
       480, 508, 522, 529, 9,
       530, 558, 569, 579, 9,
       580, 606, 617, 624, 9,
       625, 649, 660, 664, 9,
       665, 690, 701, 705, 9,
       706, 731, 742, 746, 9,
       747, 778, 789, 800, 9,
       801, 831, 860, 861, 9,
       862, 893, 922, 923, 9,
       924, 955, 984, 985, 9,
       986, 1021, 1050, 1051, 9,

 // properties: name, type, flags
       1052, 1070, 0x10005001, 		 // QDateTime UndefinedDateTime
       1080, 1096, 0x06005001, 		 // double UndefinedDouble
       1103, 1117, 0x02005001, 		 // int UndefinedEnum
       1121, 1136, 0x02005001, 		 // int UndefinedInt16
       1140, 1155, 0x02005001, 		 // int UndefinedInt32
       1159, 1175, 0x06005001, 		 // double UndefinedSingle
       1182, 1190, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_BasicEnvRemoteAPI__IRemoteAPI() {
    static const char stringdata0[] = {
    "BasicEnvRemoteAPI::IRemoteAPI\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "Close()\0\0\0\0Connect(QString)\0instrumentName\0\0\0Disconnect()\0\0\0\0ExecuteCommand(QString)\0"
    "commandName\0\0\0ExecuteCommandWithParameter(QString,QString)\0commandName,commandParameter\0\0\0GetParameterEnum(QString)\0parameterName\0int\0\0GetParameterInt16(QString)\0parameterName\0int\0\0GetParameterInt32(QString)\0"
    "parameterName\0int\0\0GetParameterSingle(QString)\0parameterName\0double\0\0ReadOutputDateTime(QString)\0outputName\0QDateTime\0\0ReadOutputDouble(QString)\0outputName\0double\0\0ReadOutputEnum(QString)\0outputName\0int\0"
    "\0ReadOutputInt16(QString)\0outputName\0int\0\0ReadOutputInt32(QString)\0outputName\0int\0\0ReadOutputVectorInt16(QString)\0outputName\0QList<int>\0\0SetParameterEnum(QString,int)\0parameterName,parameterValue\0\0\0SetParameterInt16(QString,int)\0"
    "parameterName,parameterValue\0\0\0SetParameterInt32(QString,int)\0parameterName,parameterValue\0\0\0SetParameterSingle(QString,double)\0parameterName,parameterValue\0\0\0"
    "UndefinedDateTime\0QDateTime\0UndefinedDouble\0"
    "double\0UndefinedEnum\0int\0UndefinedInt16\0int\0UndefinedInt32\0int\0UndefinedSingle\0double\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IRemoteAPI::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_BasicEnvRemoteAPI__IRemoteAPI(),
qt_meta_data_BasicEnvRemoteAPI__IRemoteAPI }
};

void *IRemoteAPI::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_BasicEnvRemoteAPI__IRemoteAPI()))
        return static_cast<void*>(const_cast<IRemoteAPI*>(this));
    return AxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_BasicEnvRemoteAPI__IRemoteInfo[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       6,    10, // methods
       1,    40, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       31, 70, 92, 93, 5,
       94, 119, 124, 125, 5,
       126, 152, 167, 168, 5,

 // slots: signature, parameters, type, tag, flags
       169, 180, 181, 193, 9,
       194, 204, 205, 217, 9,
       218, 231, 232, 244, 9,

 // properties: name, type, flags
       245, 253, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_BasicEnvRemoteAPI__IRemoteInfo() {
    static const char stringdata0[] = {
    "BasicEnvRemoteAPI::IRemoteInfo\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "Commands()\0\0QStringList\0\0Outputs()\0\0QStringList\0\0Parameters()\0\0"
    "QStringList\0\0"
    "control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject IRemoteInfo::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_BasicEnvRemoteAPI__IRemoteInfo(),
qt_meta_data_BasicEnvRemoteAPI__IRemoteInfo }
};

void *IRemoteInfo::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_BasicEnvRemoteAPI__IRemoteInfo()))
        return static_cast<void*>(const_cast<IRemoteInfo*>(this));
    return AxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_BasicEnvRemoteAPI__I2250Connect[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       9,    10, // methods
       1,    55, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       32, 71, 93, 94, 5,
       95, 120, 125, 126, 5,
       127, 153, 168, 169, 5,

 // slots: signature, parameters, type, tag, flags
       170, 178, 179, 180, 9,
       181, 198, 213, 214, 9,
       215, 235, 250, 251, 9,
       252, 273, 274, 286, 9,
       287, 308, 323, 328, 9,
       329, 357, 358, 366, 9,

 // properties: name, type, flags
       367, 375, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_BasicEnvRemoteAPI__I2250Connect() {
    static const char stringdata0[] = {
    "BasicEnvRemoteAPI::I2250Connect\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "Close()\0\0\0\0Connect(QString)\0instrumentName\0\0\0Disconnect(QString)\0"
    "instrumentName\0\0\0GetInstrumentNames()\0\0QStringList\0\0IsConnected(QString)\0instrumentName\0bool\0\0NameOfConnectedInstrument()\0\0QString\0\0"
    "control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject I2250Connect::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_BasicEnvRemoteAPI__I2250Connect(),
qt_meta_data_BasicEnvRemoteAPI__I2250Connect }
};

void *I2250Connect::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_BasicEnvRemoteAPI__I2250Connect()))
        return static_cast<void*>(const_cast<I2250Connect*>(this));
    return AxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_BasicEnvRemoteAPI__I2250Control[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       30,    10, // methods
       7,    160, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       32, 71, 93, 94, 5,
       95, 120, 125, 126, 5,
       127, 153, 168, 169, 5,

 // slots: signature, parameters, type, tag, flags
       170, 202, 229, 230, 9,
       231, 284, 328, 329, 9,
       330, 368, 397, 407, 9,
       408, 450, 479, 489, 9,
       490, 526, 555, 562, 9,
       563, 597, 626, 630, 9,
       631, 666, 695, 699, 9,
       700, 735, 764, 768, 9,
       769, 805, 834, 841, 9,
       842, 878, 907, 915, 9,
       916, 957, 1001, 1013, 9,
       1014, 1050, 1076, 1086, 9,
       1087, 1127, 1153, 1163, 9,
       1164, 1198, 1224, 1231, 9,
       1232, 1264, 1290, 1294, 9,
       1295, 1328, 1354, 1358, 9,
       1359, 1392, 1418, 1422, 9,
       1423, 1462, 1488, 1499, 9,
       1500, 1540, 1566, 1570, 9,
       1571, 1619, 1663, 1664, 9,
       1665, 1708, 1752, 1753, 9,
       1754, 1792, 1836, 1837, 9,
       1838, 1877, 1921, 1922, 9,
       1923, 1962, 2006, 2007, 9,
       2008, 2051, 2095, 2096, 9,
       2097, 2141, 2185, 2186, 9,
       2187, 2230, 2268, 2269, 9,

 // properties: name, type, flags
       2270, 2288, 0x10005001, 		 // QDateTime UndefinedDateTime
       2298, 2314, 0x06005001, 		 // double UndefinedDouble
       2321, 2335, 0x02005001, 		 // int UndefinedEnum
       2339, 2354, 0x02005001, 		 // int UndefinedInt16
       2358, 2373, 0x02005001, 		 // int UndefinedInt32
       2377, 2393, 0x06005001, 		 // double UndefinedSingle
       2400, 2408, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_BasicEnvRemoteAPI__I2250Control() {
    static const char stringdata0[] = {
    "BasicEnvRemoteAPI::I2250Control\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "ExecuteCommand(QString,QString)\0instrumentName,commandName\0\0\0ExecuteCommandWithParameter(QString,QString,QString)\0"
    "instrumentName,commandName,commandParameter\0\0\0GetParameterDateTime(QString,QString)\0instrumentName,parameterName\0QDateTime\0\0GetParameterDateTimeZone(QString,QString)\0instrumentName,parameterName\0QDateTime\0"
    "\0GetParameterDouble(QString,QString)\0instrumentName,parameterName\0double\0\0GetParameterEnum(QString,QString)\0instrumentName,parameterName\0int\0\0GetParameterInt16(QString,QString)\0instrumentName,parameterName\0"
    "int\0\0GetParameterInt32(QString,QString)\0instrumentName,parameterName\0int\0\0GetParameterSingle(QString,QString)\0instrumentName,parameterName\0double\0\0GetParameterString(QString,QString)\0instrumentName,parameterName\0"
    "QString\0\0GetParameterValues(QString,QString,int&)\0instrumentName,parameterName,indexOfCurrent\0QStringList\0\0ReadOutputDateTime(QString,QString)\0instrumentName,outputName\0QDateTime\0\0ReadOutputDateTimeZone(QString,QString)\0"
    "instrumentName,outputName\0QDateTime\0\0ReadOutputDouble(QString,QString)\0instrumentName,outputName\0double\0\0ReadOutputEnum(QString,QString)\0instrumentName,outputName\0int\0\0ReadOutputInt16(QString,QString)\0"
    "instrumentName,outputName\0int\0\0ReadOutputInt32(QString,QString)\0instrumentName,outputName\0int\0\0ReadOutputVectorInt16(QString,QString)\0instrumentName,outputName\0QList<int>\0\0ReadSoundExposureLevel(QString,QString)\0"
    "instrumentName,outputName\0int\0\0SetParameterDateTime(QString,QString,QDateTime)\0instrumentName,parameterName,parameterValue\0\0\0SetParameterDouble(QString,QString,double)\0instrumentName,parameterName,parameterValue\0"
    "\0\0SetParameterEnum(QString,QString,int)\0instrumentName,parameterName,parameterValue\0\0\0SetParameterInt16(QString,QString,int)\0instrumentName,parameterName,parameterValue\0\0\0SetParameterInt32(QString,QString,int)\0"
    "instrumentName,parameterName,parameterValue\0\0\0SetParameterSingle(QString,QString,double)\0instrumentName,parameterName,parameterValue\0\0\0SetParameterString(QString,QString,QString)\0instrumentName,parameterName,parameterValue\0"
    "\0\0SetParameterValue(QString,QString,QString)\0instrumentName,parameterName,newValue\0\0\0"
    "UndefinedDateTime\0QDateTime\0UndefinedDouble\0double\0UndefinedEnum\0int\0UndefinedInt16\0int\0UndefinedInt32\0int\0UndefinedSingle\0"
    "double\0control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject I2250Control::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_BasicEnvRemoteAPI__I2250Control(),
qt_meta_data_BasicEnvRemoteAPI__I2250Control }
};

void *I2250Control::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_BasicEnvRemoteAPI__I2250Control()))
        return static_cast<void*>(const_cast<I2250Control*>(this));
    return AxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_BasicEnvRemoteAPI__I2250Instrument[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       21,    10, // methods
       1,    115, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       35, 74, 96, 97, 5,
       98, 123, 128, 129, 5,
       130, 156, 171, 172, 5,

 // slots: signature, parameters, type, tag, flags
       173, 224, 278, 279, 9,
       280, 303, 318, 326, 9,
       327, 347, 362, 370, 9,
       371, 395, 410, 418, 9,
       419, 444, 459, 467, 9,
       468, 489, 504, 512, 9,
       513, 556, 599, 600, 9,
       601, 648, 695, 696, 9,
       697, 721, 736, 748, 9,
       749, 777, 792, 800, 9,
       801, 823, 838, 846, 9,
       847, 874, 889, 897, 9,
       898, 943, 986, 998, 9,
       999, 1024, 1039, 1047, 9,
       1048, 1097, 1140, 1152, 9,
       1153, 1178, 1193, 1201, 9,
       1202, 1231, 1246, 1258, 9,
       1259, 1281, 1296, 1308, 9,

 // properties: name, type, flags
       1309, 1317, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_BasicEnvRemoteAPI__I2250Instrument() {
    static const char stringdata0[] = {
    "BasicEnvRemoteAPI::I2250Instrument\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CreateJob(QString,QString,QString,QString,QString)\0instrumentName,deviceName,userName,jobName,newJobName\0"
    "\0\0CurrentDevice(QString)\0instrumentName\0QString\0\0CurrentJob(QString)\0instrumentName\0QString\0\0CurrentProject(QString)\0instrumentName\0QString\0\0CurrentTemplate(QString)\0instrumentName\0QString\0\0CurrentUser(QString)\0"
    "instrumentName\0QString\0\0DeleteJob(QString,QString,QString,QString)\0instrumentName,deviceName,userName,jobName\0\0\0DeleteProject(QString,QString,QString,QString)\0instrumentName,deviceName,userName,projectName\0"
    "\0\0GetDeviceNames(QString)\0instrumentName\0QStringList\0\0GetHardwareVersion(QString)\0instrumentName\0QString\0\0GetIPAddress(QString)\0instrumentName\0QString\0\0GetInstrumentType(QString)\0instrumentName\0QString\0"
    "\0GetJobNames(QString,QString,QString,QString)\0instrumentName,deviceName,userName,jobName\0QStringList\0\0GetModelVersion(QString)\0instrumentName\0QString\0\0GetProjectNames(QString,QString,QString,QString)\0instrumentName,deviceName,userName,jobName\0"
    "QStringList\0\0GetSerialNumber(QString)\0instrumentName\0QString\0\0GetSoftwareVersions(QString)\0instrumentName\0QStringList\0\0GetUserNames(QString)\0instrumentName\0QStringList\0\0"
    "control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject I2250Instrument::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_BasicEnvRemoteAPI__I2250Instrument(),
qt_meta_data_BasicEnvRemoteAPI__I2250Instrument }
};

void *I2250Instrument::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_BasicEnvRemoteAPI__I2250Instrument()))
        return static_cast<void*>(const_cast<I2250Instrument*>(this));
    return AxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_BasicEnvRemoteAPI__I2250Archive[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       11,    10, // methods
       1,    65, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       32, 71, 93, 94, 5,
       95, 120, 125, 126, 5,
       127, 153, 168, 169, 5,

 // slots: signature, parameters, type, tag, flags
       170, 201, 228, 229, 9,
       230, 253, 265, 266, 9,
       267, 330, 396, 397, 9,
       398, 464, 536, 537, 9,
       538, 566, 581, 586, 9,
       587, 615, 630, 634, 9,
       635, 702, 764, 765, 9,
       766, 836, 904, 905, 9,

 // properties: name, type, flags
       906, 914, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_BasicEnvRemoteAPI__I2250Archive() {
    static const char stringdata0[] = {
    "BasicEnvRemoteAPI::I2250Archive\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "CreateArchive(QString,QString)\0archivePath,newArchiveName\0\0\0DeleteArchive(QString)\0"
    "archiveName\0\0\0TransferDataToArchive(QString,QString,QString,QString,QString)\0instrumentName,deviceName,userName,jobOrProjectName,toArchiveName\0\0\0TransferDataToInstrument(QString,QString,QString,QString,QString)\0"
    "fromArchiveName,fromUserName,jobOrProjectName,instrumentName,deviceName\0\0\0TransferInProgress(QString)\0instrumentName\0bool\0\0TransferPercentage(QString)\0instrumentName\0int\0\0TransferTemplateToArchive(QString,QString,QString,QString,QString)\0"
    "instrumentName,deviceName,userName,templateName,toArchiveName\0\0\0TransferTemplateToInstrument(QString,QString,QString,QString,QString)\0fromArchiveName,fromUserName,templateName,instrumentName,deviceName\0"
    "\0\0"
    "control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject I2250Archive::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_BasicEnvRemoteAPI__I2250Archive(),
qt_meta_data_BasicEnvRemoteAPI__I2250Archive }
};

void *I2250Archive::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_BasicEnvRemoteAPI__I2250Archive()))
        return static_cast<void*>(const_cast<I2250Archive*>(this));
    return AxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_BasicEnvRemoteAPI__I2250Export[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       7,    10, // methods
       1,    45, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       31, 70, 92, 93, 5,
       94, 119, 124, 125, 5,
       126, 152, 167, 168, 5,

 // slots: signature, parameters, type, tag, flags
       169, 188, 189, 194, 9,
       195, 214, 215, 219, 9,
       220, 340, 613, 614, 9,
       615, 642, 643, 655, 9,

 // properties: name, type, flags
       656, 664, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_BasicEnvRemoteAPI__I2250Export() {
    static const char stringdata0[] = {
    "BasicEnvRemoteAPI::I2250Export\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "ExportInProgress()\0\0bool\0\0ExportPercentage()\0\0int\0\0ExportProjectToXML(QString,QString,QString,bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,QString,QString)\0"
    "fromArchiveName,fromUserName,fromProjectName,exportTotalBB,exportTotalSpectra,exportTotalLNSpectra,exportLoggedBB,exportLoggedSpectra,exportLoggedLNSpectra,exportFastLog,exportSetup,exportStatistics,exportRTRoom,exportRTSpectra,exportRTDecay,destinationPath,exportLanguage\0"
    "\0\0SupportedExportLanguages()\0\0QStringList\0\0"
    "control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject I2250Export::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_BasicEnvRemoteAPI__I2250Export(),
qt_meta_data_BasicEnvRemoteAPI__I2250Export }
};

void *I2250Export::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_BasicEnvRemoteAPI__I2250Export()))
        return static_cast<void*>(const_cast<I2250Export*>(this));
    return AxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_BasicEnvRemoteAPI__I2250Update[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       7,    10, // methods
       1,    45, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       31, 70, 92, 93, 5,
       94, 119, 124, 125, 5,
       126, 152, 167, 168, 5,

 // slots: signature, parameters, type, tag, flags
       169, 197, 198, 210, 9,
       211, 263, 317, 318, 9,
       319, 345, 360, 365, 9,
       366, 392, 407, 411, 9,

 // properties: name, type, flags
       412, 420, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_BasicEnvRemoteAPI__I2250Update() {
    static const char stringdata0[] = {
    "BasicEnvRemoteAPI::I2250Update\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "AvailableSoftwarePackages()\0\0QStringList\0\0Update2250Software(QString,QString,int,QStringList)\0"
    "instrumentName,packageName,installationType,languages\0\0\0UpdateInProgress(QString)\0instrumentName\0bool\0\0UpdatePercentage(QString)\0instrumentName\0int\0\0"
    "control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject I2250Update::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_BasicEnvRemoteAPI__I2250Update(),
qt_meta_data_BasicEnvRemoteAPI__I2250Update }
};

void *I2250Update::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_BasicEnvRemoteAPI__I2250Update()))
        return static_cast<void*>(const_cast<I2250Update*>(this));
    return AxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_BasicEnvRemoteAPI__RemoteAPI[] = {

 // content:
       1,       // revision
       0,       // classname
       9,    10, // classinfo
       94,    28, // methods
       7,    498, // properties
       0,    0, // enums/sets

 // classinfo: key, value
       29, 41, 
       52, 64, 
       76, 88, 
       100, 112, 
       125, 137, 
       150, 162, 
       178, 190, 
       203, 215, 
       227, 239, 

 // signals: signature, parameters, type, tag, flags
       251, 290, 312, 313, 5,
       314, 339, 344, 345, 5,
       346, 372, 387, 388, 5,

 // slots: signature, parameters, type, tag, flags
       389, 417, 418, 430, 9,
       431, 439, 440, 441, 9,
       442, 453, 454, 466, 9,
       467, 484, 499, 500, 9,
       501, 532, 559, 560, 9,
       561, 612, 666, 667, 9,
       668, 691, 706, 714, 9,
       715, 735, 750, 758, 9,
       759, 783, 798, 806, 9,
       807, 832, 847, 855, 9,
       856, 877, 892, 900, 9,
       901, 924, 936, 937, 9,
       938, 981, 1024, 1025, 9,
       1026, 1073, 1120, 1121, 9,
       1122, 1135, 1136, 1137, 9,
       1138, 1158, 1173, 1174, 9,
       1175, 1185, 1186, 1187, 9,
       1188, 1205, 1209, 1214, 9,
       1215, 1239, 1251, 1252, 9,
       1253, 1285, 1312, 1313, 9,
       1314, 1359, 1388, 1389, 9,
       1390, 1443, 1487, 1488, 9,
       1489, 1508, 1509, 1514, 9,
       1515, 1534, 1535, 1539, 9,
       1540, 1660, 1933, 1934, 9,
       1935, 1959, 1974, 1986, 9,
       1987, 2015, 2030, 2038, 9,
       2039, 2053, 2054, 2058, 9,
       2059, 2081, 2096, 2104, 9,
       2105, 2126, 2127, 2139, 9,
       2140, 2167, 2182, 2190, 9,
       2191, 2236, 2279, 2291, 9,
       2292, 2317, 2332, 2340, 9,
       2341, 2379, 2408, 2418, 9,
       2419, 2461, 2490, 2500, 9,
       2501, 2537, 2566, 2573, 9,
       2574, 2600, 2614, 2618, 9,
       2619, 2653, 2682, 2686, 9,
       2687, 2714, 2728, 2732, 9,
       2733, 2768, 2797, 2801, 9,
       2802, 2829, 2843, 2847, 9,
       2848, 2883, 2912, 2916, 9,
       2917, 2945, 2959, 2966, 9,
       2967, 3003, 3032, 3039, 9,
       3040, 3076, 3105, 3113, 9,
       3114, 3155, 3199, 3211, 9,
       3212, 3261, 3304, 3316, 9,
       3317, 3342, 3357, 3365, 9,
       3366, 3395, 3410, 3422, 9,
       3423, 3433, 3434, 3451, 9,
       3452, 3474, 3489, 3501, 9,
       3502, 3523, 3538, 3543, 9,
       3544, 3572, 3573, 3581, 9,
       3582, 3592, 3593, 3605, 9,
       3606, 3619, 3620, 3632, 9,
       3633, 3661, 3672, 3682, 9,
       3683, 3719, 3745, 3755, 9,
       3756, 3796, 3822, 3832, 9,
       3833, 3859, 3870, 3877, 9,
       3878, 3912, 3938, 3945, 9,
       3946, 3970, 3981, 3985, 9,
       3986, 4018, 4044, 4048, 9,
       4049, 4074, 4085, 4089, 9,
       4090, 4123, 4149, 4153, 9,
       4154, 4179, 4190, 4194, 9,
       4195, 4228, 4254, 4258, 9,
       4259, 4290, 4301, 4312, 9,
       4313, 4352, 4378, 4389, 9,
       4390, 4430, 4456, 4460, 9,
       4461, 4509, 4553, 4554, 9,
       4555, 4598, 4642, 4643, 9,
       4644, 4682, 4726, 4727, 9,
       4728, 4758, 4787, 4788, 9,
       4789, 4828, 4872, 4873, 9,
       4874, 4905, 4934, 4935, 9,
       4936, 4975, 5019, 5020, 9,
       5021, 5052, 5081, 5082, 9,
       5083, 5126, 5170, 5171, 9,
       5172, 5207, 5236, 5237, 9,
       5238, 5282, 5326, 5327, 9,
       5328, 5371, 5409, 5410, 9,
       5411, 5438, 5439, 5451, 9,
       5452, 5515, 5581, 5582, 9,
       5583, 5649, 5721, 5722, 9,
       5723, 5751, 5766, 5771, 9,
       5772, 5800, 5815, 5819, 9,
       5820, 5887, 5949, 5950, 9,
       5951, 6021, 6089, 6090, 9,
       6091, 6143, 6197, 6198, 9,
       6199, 6225, 6240, 6245, 9,
       6246, 6272, 6287, 6291, 9,

 // properties: name, type, flags
       6292, 6301, 0x0a005001, 		 // QString ToString
       6309, 6327, 0x10005001, 		 // QDateTime UndefinedDateTime
       6337, 6353, 0x06005001, 		 // double UndefinedDouble
       6360, 6374, 0x02005001, 		 // int UndefinedEnum
       6378, 6393, 0x02005001, 		 // int UndefinedInt16
       6397, 6412, 0x02005001, 		 // int UndefinedInt32
       6416, 6432, 0x06005001, 		 // double UndefinedSingle

        0        // eod
};

static const char *qt_meta_stringdata_BasicEnvRemoteAPI__RemoteAPI() {
    static const char stringdata0[] = {
    "BasicEnvRemoteAPI::RemoteAPI\0"
    "Interface 1\0IRemoteAPI\0Interface 2\0IRemoteInfo\0Interface 3\0IDisposable\0Interface 4\0I2250Connect\0Interface 5\0I2250Control\0Interface 6\0I2250Instrument\0Interface 7\0I2250Archive\0Interface 8\0I2250Export\0Interface 9\0"
    "I2250Update\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "AvailableSoftwarePackages()\0\0QStringList\0\0Close()\0\0"
    "\0\0Commands()\0\0QStringList\0\0Connect(QString)\0instrumentName\0\0\0CreateArchive(QString,QString)\0archivePath,newArchiveName\0\0\0CreateJob(QString,QString,QString,QString,QString)\0instrumentName,deviceName,userName,jobName,newJobName\0"
    "\0\0CurrentDevice(QString)\0instrumentName\0QString\0\0CurrentJob(QString)\0instrumentName\0QString\0\0CurrentProject(QString)\0instrumentName\0QString\0\0CurrentTemplate(QString)\0instrumentName\0QString\0\0CurrentUser(QString)\0"
    "instrumentName\0QString\0\0DeleteArchive(QString)\0archiveName\0\0\0DeleteJob(QString,QString,QString,QString)\0instrumentName,deviceName,userName,jobName\0\0\0DeleteProject(QString,QString,QString,QString)\0instrumentName,deviceName,userName,projectName\0"
    "\0\0Disconnect()\0\0\0\0Disconnect(QString)\0instrumentName\0\0\0Dispose()\0\0\0\0Equals(QVariant)\0obj\0bool\0\0ExecuteCommand(QString)\0commandName\0\0\0ExecuteCommand(QString,QString)\0instrumentName,commandName\0\0\0ExecuteCommandWithParameter(QString,QString)\0"
    "commandName,commandParameter\0\0\0ExecuteCommandWithParameter(QString,QString,QString)\0instrumentName,commandName,commandParameter\0\0\0ExportInProgress()\0\0bool\0\0ExportPercentage()\0\0int\0\0ExportProjectToXML(QString,QString,QString,bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,bool,QString,QString)\0"
    "fromArchiveName,fromUserName,fromProjectName,exportTotalBB,exportTotalSpectra,exportTotalLNSpectra,exportLoggedBB,exportLoggedSpectra,exportLoggedLNSpectra,exportFastLog,exportSetup,exportStatistics,exportRTRoom,exportRTSpectra,exportRTDecay,destinationPath,exportLanguage\0"
    "\0\0GetDeviceNames(QString)\0instrumentName\0QStringList\0\0GetHardwareVersion(QString)\0instrumentName\0QString\0\0GetHashCode()\0\0int\0\0GetIPAddress(QString)\0instrumentName\0QString\0\0GetInstrumentNames()\0\0QStringList\0"
    "\0GetInstrumentType(QString)\0instrumentName\0QString\0\0GetJobNames(QString,QString,QString,QString)\0instrumentName,deviceName,userName,jobName\0QStringList\0\0GetModelVersion(QString)\0instrumentName\0QString\0"
    "\0GetParameterDateTime(QString,QString)\0instrumentName,parameterName\0QDateTime\0\0GetParameterDateTimeZone(QString,QString)\0instrumentName,parameterName\0QDateTime\0\0GetParameterDouble(QString,QString)\0instrumentName,parameterName\0"
    "double\0\0GetParameterEnum(QString)\0parameterName\0int\0\0GetParameterEnum(QString,QString)\0instrumentName,parameterName\0int\0\0GetParameterInt16(QString)\0parameterName\0int\0\0GetParameterInt16(QString,QString)\0"
    "instrumentName,parameterName\0int\0\0GetParameterInt32(QString)\0parameterName\0int\0\0GetParameterInt32(QString,QString)\0instrumentName,parameterName\0int\0\0GetParameterSingle(QString)\0parameterName\0double\0\0GetParameterSingle(QString,QString)\0"
    "instrumentName,parameterName\0double\0\0GetParameterString(QString,QString)\0instrumentName,parameterName\0QString\0\0GetParameterValues(QString,QString,int&)\0instrumentName,parameterName,indexOfCurrent\0QStringList\0"
    "\0GetProjectNames(QString,QString,QString,QString)\0instrumentName,deviceName,userName,jobName\0QStringList\0\0GetSerialNumber(QString)\0instrumentName\0QString\0\0GetSoftwareVersions(QString)\0instrumentName\0QStringList\0"
    "\0GetType()\0\0mscorlib::_Type*\0\0GetUserNames(QString)\0instrumentName\0QStringList\0\0IsConnected(QString)\0instrumentName\0bool\0\0NameOfConnectedInstrument()\0\0QString\0\0Outputs()\0\0QStringList\0\0Parameters()\0\0QStringList\0"
    "\0ReadOutputDateTime(QString)\0outputName\0QDateTime\0\0ReadOutputDateTime(QString,QString)\0instrumentName,outputName\0QDateTime\0\0ReadOutputDateTimeZone(QString,QString)\0instrumentName,outputName\0QDateTime\0\0"
    "ReadOutputDouble(QString)\0outputName\0double\0\0ReadOutputDouble(QString,QString)\0instrumentName,outputName\0double\0\0ReadOutputEnum(QString)\0outputName\0int\0\0ReadOutputEnum(QString,QString)\0instrumentName,outputName\0"
    "int\0\0ReadOutputInt16(QString)\0outputName\0int\0\0ReadOutputInt16(QString,QString)\0instrumentName,outputName\0int\0\0ReadOutputInt32(QString)\0outputName\0int\0\0ReadOutputInt32(QString,QString)\0instrumentName,outputName\0"
    "int\0\0ReadOutputVectorInt16(QString)\0outputName\0QList<int>\0\0ReadOutputVectorInt16(QString,QString)\0instrumentName,outputName\0QList<int>\0\0ReadSoundExposureLevel(QString,QString)\0instrumentName,outputName\0"
    "int\0\0SetParameterDateTime(QString,QString,QDateTime)\0instrumentName,parameterName,parameterValue\0\0\0SetParameterDouble(QString,QString,double)\0instrumentName,parameterName,parameterValue\0\0\0SetParameterEnum(QString,QString,int)\0"
    "instrumentName,parameterName,parameterValue\0\0\0SetParameterEnum(QString,int)\0parameterName,parameterValue\0\0\0SetParameterInt16(QString,QString,int)\0instrumentName,parameterName,parameterValue\0\0\0SetParameterInt16(QString,int)\0"
    "parameterName,parameterValue\0\0\0SetParameterInt32(QString,QString,int)\0instrumentName,parameterName,parameterValue\0\0\0SetParameterInt32(QString,int)\0parameterName,parameterValue\0\0\0SetParameterSingle(QString,QString,double)\0"
    "instrumentName,parameterName,parameterValue\0\0\0SetParameterSingle(QString,double)\0parameterName,parameterValue\0\0\0SetParameterString(QString,QString,QString)\0instrumentName,parameterName,parameterValue\0\0"
    "\0SetParameterValue(QString,QString,QString)\0instrumentName,parameterName,newValue\0\0\0SupportedExportLanguages()\0\0QStringList\0\0TransferDataToArchive(QString,QString,QString,QString,QString)\0instrumentName,deviceName,userName,jobOrProjectName,toArchiveName\0"
    "\0\0TransferDataToInstrument(QString,QString,QString,QString,QString)\0fromArchiveName,fromUserName,jobOrProjectName,instrumentName,deviceName\0\0\0TransferInProgress(QString)\0instrumentName\0bool\0\0TransferPercentage(QString)\0"
    "instrumentName\0int\0\0TransferTemplateToArchive(QString,QString,QString,QString,QString)\0instrumentName,deviceName,userName,templateName,toArchiveName\0\0\0TransferTemplateToInstrument(QString,QString,QString,QString,QString)\0"
    "fromArchiveName,fromUserName,templateName,instrumentName,deviceName\0\0\0Update2250Software(QString,QString,int,QStringList)\0instrumentName,packageName,installationType,languages\0\0\0UpdateInProgress(QString)\0"
    "instrumentName\0bool\0\0UpdatePercentage(QString)\0instrumentName\0int\0\0"
    "ToString\0QString\0UndefinedDateTime\0QDateTime\0UndefinedDouble\0double\0UndefinedEnum\0int\0UndefinedInt16\0int\0UndefinedInt32\0int\0UndefinedSingle\0"
    "double\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject RemoteAPI::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_BasicEnvRemoteAPI__RemoteAPI(),
qt_meta_data_BasicEnvRemoteAPI__RemoteAPI }
};

void *RemoteAPI::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_BasicEnvRemoteAPI__RemoteAPI()))
        return static_cast<void*>(const_cast<RemoteAPI*>(this));
    return AxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_BasicEnvRemoteAPI__I2250Info[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       6,    10, // methods
       1,    40, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       29, 68, 90, 91, 5,
       92, 117, 122, 123, 5,
       124, 150, 165, 166, 5,

 // slots: signature, parameters, type, tag, flags
       167, 185, 200, 212, 9,
       213, 230, 245, 257, 9,
       258, 278, 293, 305, 9,

 // properties: name, type, flags
       306, 314, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_BasicEnvRemoteAPI__I2250Info() {
    static const char stringdata0[] = {
    "BasicEnvRemoteAPI::I2250Info\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "Commands(QString)\0instrumentName\0QStringList\0\0Outputs(QString)\0"
    "instrumentName\0QStringList\0\0Parameters(QString)\0instrumentName\0QStringList\0\0"
    "control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject I2250Info::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_BasicEnvRemoteAPI__I2250Info(),
qt_meta_data_BasicEnvRemoteAPI__I2250Info }
};

void *I2250Info::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_BasicEnvRemoteAPI__I2250Info()))
        return static_cast<void*>(const_cast<I2250Info*>(this));
    return AxObject::qt_metacast(_clname);
}

