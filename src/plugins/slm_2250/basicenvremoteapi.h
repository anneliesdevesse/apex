/****************************************************************************
**
** Namespace BasicEnvRemoteAPI generated by dumpcpp from type library
** BasicEnvRemoteApi.tlb
**
****************************************************************************/

#ifndef QAX_DUMPCPP_BASICENVREMOTEAPI_H
#define QAX_DUMPCPP_BASICENVREMOTEAPI_H

// Define this symbol to __declspec(dllexport) or __declspec(dllimport)
#ifndef BASICENVREMOTEAPI_EXPORT
#define BASICENVREMOTEAPI_EXPORT
#endif

#include "axobject.h"
//#include <qaxwidget.h>
#include <qdatetime.h>
//#include <qpixmap.h>

struct IDispatch;


// Referenced namespace
namespace mscorlib {
    class _Type;
}


namespace BasicEnvRemoteAPI {


class BASICENVREMOTEAPI_EXPORT IRemoteAPI : public AxObject
{
public:
    IRemoteAPI(IDispatch *subobject = 0, AxObject *parent = 0)
    : AxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property UndefinedDateTime
    */
    inline QDateTime UndefinedDateTime() const; //Returns the value of UndefinedDateTime

    /*
    Property UndefinedDouble
    */
    inline double UndefinedDouble() const; //Returns the value of UndefinedDouble

    /*
    Property UndefinedEnum
    */
    inline int UndefinedEnum() const; //Returns the value of UndefinedEnum

    /*
    Property UndefinedInt16
    */
    inline int UndefinedInt16() const; //Returns the value of UndefinedInt16

    /*
    Property UndefinedInt32
    */
    inline int UndefinedInt32() const; //Returns the value of UndefinedInt32

    /*
    Property UndefinedSingle
    */
    inline double UndefinedSingle() const; //Returns the value of UndefinedSingle

    /*
    Method Close
    */
    inline void Close();

    /*
    Method Connect
    */
    inline void Connect(const QString& instrumentName);

    /*
    Method Disconnect
    */
    inline void Disconnect();

    /*
    Method ExecuteCommand
    */
    inline void ExecuteCommand(const QString& commandName);

    /*
    Method ExecuteCommandWithParameter
    */
    inline void ExecuteCommandWithParameter(const QString& commandName, const QString& commandParameter);

    /*
    Method GetParameterEnum
    */
    inline int GetParameterEnum(const QString& parameterName);

    /*
    Method GetParameterInt16
    */
    inline int GetParameterInt16(const QString& parameterName);

    /*
    Method GetParameterInt32
    */
    inline int GetParameterInt32(const QString& parameterName);

    /*
    Method GetParameterSingle
    */
    inline double GetParameterSingle(const QString& parameterName);

    /*
    Method ReadOutputDateTime
    */
    inline QDateTime ReadOutputDateTime(const QString& outputName);

    /*
    Method ReadOutputDouble
    */
    inline double ReadOutputDouble(const QString& outputName);

    /*
    Method ReadOutputEnum
    */
    inline int ReadOutputEnum(const QString& outputName);

    /*
    Method ReadOutputInt16
    */
    inline int ReadOutputInt16(const QString& outputName);

    /*
    Method ReadOutputInt32
    */
    inline int ReadOutputInt32(const QString& outputName);

    /*
    Method ReadOutputVectorInt16
    */
    inline QList<int> ReadOutputVectorInt16(const QString& outputName);

    /*
    Method SetParameterEnum
    */
    inline void SetParameterEnum(const QString& parameterName, int parameterValue);

    /*
    Method SetParameterInt16
    */
    inline void SetParameterInt16(const QString& parameterName, int parameterValue);

    /*
    Method SetParameterInt32
    */
    inline void SetParameterInt32(const QString& parameterName, int parameterValue);

    /*
    Method SetParameterSingle
    */
    inline void SetParameterSingle(const QString& parameterName, double parameterValue);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class BASICENVREMOTEAPI_EXPORT IRemoteInfo : public AxObject
{
public:
    IRemoteInfo(IDispatch *subobject = 0, AxObject *parent = 0)
    : AxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Method Commands
    */
    inline QStringList Commands();

    /*
    Method Outputs
    */
    inline QStringList Outputs();

    /*
    Method Parameters
    */
    inline QStringList Parameters();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class BASICENVREMOTEAPI_EXPORT I2250Connect : public AxObject
{
public:
    I2250Connect(IDispatch *subobject = 0, AxObject *parent = 0)
    : AxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Method Close
    */
    inline void Close();

    /*
    Method Connect
    */
    inline void Connect(const QString& instrumentName);

    /*
    Method Disconnect
    */
    inline void Disconnect(const QString& instrumentName);

    /*
    Method GetInstrumentNames
    */
    inline QStringList GetInstrumentNames();

    /*
    Method IsConnected
    */
    inline bool IsConnected(const QString& instrumentName);

    /*
    Method NameOfConnectedInstrument
    */
    inline QString NameOfConnectedInstrument();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class BASICENVREMOTEAPI_EXPORT I2250Control : public AxObject
{
public:
    I2250Control(IDispatch *subobject = 0, AxObject *parent = 0)
    : AxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property UndefinedDateTime
    */
    inline QDateTime UndefinedDateTime() const; //Returns the value of UndefinedDateTime

    /*
    Property UndefinedDouble
    */
    inline double UndefinedDouble() const; //Returns the value of UndefinedDouble

    /*
    Property UndefinedEnum
    */
    inline int UndefinedEnum() const; //Returns the value of UndefinedEnum

    /*
    Property UndefinedInt16
    */
    inline int UndefinedInt16() const; //Returns the value of UndefinedInt16

    /*
    Property UndefinedInt32
    */
    inline int UndefinedInt32() const; //Returns the value of UndefinedInt32

    /*
    Property UndefinedSingle
    */
    inline double UndefinedSingle() const; //Returns the value of UndefinedSingle

    /*
    Method ExecuteCommand
    */
    inline void ExecuteCommand(const QString& instrumentName, const QString& commandName);

    /*
    Method ExecuteCommandWithParameter
    */
    inline void ExecuteCommandWithParameter(const QString& instrumentName, const QString& commandName, const QString& commandParameter);

    /*
    Method GetParameterDateTime
    */
    inline QDateTime GetParameterDateTime(const QString& instrumentName, const QString& parameterName);

    /*
    Method GetParameterDateTimeZone
    */
    inline QDateTime GetParameterDateTimeZone(const QString& instrumentName, const QString& parameterName);

    /*
    Method GetParameterDouble
    */
    inline double GetParameterDouble(const QString& instrumentName, const QString& parameterName);

    /*
    Method GetParameterEnum
    */
    inline int GetParameterEnum(const QString& instrumentName, const QString& parameterName);

    /*
    Method GetParameterInt16
    */
    inline int GetParameterInt16(const QString& instrumentName, const QString& parameterName);

    /*
    Method GetParameterInt32
    */
    inline int GetParameterInt32(const QString& instrumentName, const QString& parameterName);

    /*
    Method GetParameterSingle
    */
    inline double GetParameterSingle(const QString& instrumentName, const QString& parameterName);

    /*
    Method GetParameterString
    */
    inline QString GetParameterString(const QString& instrumentName, const QString& parameterName);

    /*
    Method GetParameterValues
    */
    inline QStringList GetParameterValues(const QString& instrumentName, const QString& parameterName, int& indexOfCurrent);

    /*
    Method ReadOutputDateTime
    */
    inline QDateTime ReadOutputDateTime(const QString& instrumentName, const QString& outputName);

    /*
    Method ReadOutputDateTimeZone
    */
    inline QDateTime ReadOutputDateTimeZone(const QString& instrumentName, const QString& outputName);

    /*
    Method ReadOutputDouble
    */
    inline double ReadOutputDouble(const QString& instrumentName, const QString& outputName);

    /*
    Method ReadOutputEnum
    */
    inline int ReadOutputEnum(const QString& instrumentName, const QString& outputName);

    /*
    Method ReadOutputInt16
    */
    inline int ReadOutputInt16(const QString& instrumentName, const QString& outputName);

    /*
    Method ReadOutputInt32
    */
    inline int ReadOutputInt32(const QString& instrumentName, const QString& outputName);

    /*
    Method ReadOutputVectorInt16
    */
    inline QList<int> ReadOutputVectorInt16(const QString& instrumentName, const QString& outputName);

    /*
    Method ReadSoundExposureLevel
    */
    inline int ReadSoundExposureLevel(const QString& instrumentName, const QString& outputName);

    /*
    Method SetParameterDateTime
    */
    inline void SetParameterDateTime(const QString& instrumentName, const QString& parameterName, const QDateTime& parameterValue);

    /*
    Method SetParameterDouble
    */
    inline void SetParameterDouble(const QString& instrumentName, const QString& parameterName, double parameterValue);

    /*
    Method SetParameterEnum
    */
    inline void SetParameterEnum(const QString& instrumentName, const QString& parameterName, int parameterValue);

    /*
    Method SetParameterInt16
    */
    inline void SetParameterInt16(const QString& instrumentName, const QString& parameterName, int parameterValue);

    /*
    Method SetParameterInt32
    */
    inline void SetParameterInt32(const QString& instrumentName, const QString& parameterName, int parameterValue);

    /*
    Method SetParameterSingle
    */
    inline void SetParameterSingle(const QString& instrumentName, const QString& parameterName, double parameterValue);

    /*
    Method SetParameterString
    */
    inline void SetParameterString(const QString& instrumentName, const QString& parameterName, const QString& parameterValue);

    /*
    Method SetParameterValue
    */
    inline void SetParameterValue(const QString& instrumentName, const QString& parameterName, const QString& newValue);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class BASICENVREMOTEAPI_EXPORT I2250Instrument : public AxObject
{
public:
    I2250Instrument(IDispatch *subobject = 0, AxObject *parent = 0)
    : AxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Method CreateJob
    */
    inline void CreateJob(const QString& instrumentName, const QString& deviceName, const QString& userName, const QString& jobName, const QString& newJobName);

    /*
    Method CurrentDevice
    */
    inline QString CurrentDevice(const QString& instrumentName);

    /*
    Method CurrentJob
    */
    inline QString CurrentJob(const QString& instrumentName);

    /*
    Method CurrentProject
    */
    inline QString CurrentProject(const QString& instrumentName);

    /*
    Method CurrentTemplate
    */
    inline QString CurrentTemplate(const QString& instrumentName);

    /*
    Method CurrentUser
    */
    inline QString CurrentUser(const QString& instrumentName);

    /*
    Method DeleteJob
    */
    inline void DeleteJob(const QString& instrumentName, const QString& deviceName, const QString& userName, const QString& jobName);

    /*
    Method DeleteProject
    */
    inline void DeleteProject(const QString& instrumentName, const QString& deviceName, const QString& userName, const QString& projectName);

    /*
    Method GetDeviceNames
    */
    inline QStringList GetDeviceNames(const QString& instrumentName);

    /*
    Method GetHardwareVersion
    */
    inline QString GetHardwareVersion(const QString& instrumentName);

    /*
    Method GetIPAddress
    */
    inline QString GetIPAddress(const QString& instrumentName);

    /*
    Method GetInstrumentType
    */
    inline QString GetInstrumentType(const QString& instrumentName);

    /*
    Method GetJobNames
    */
    inline QStringList GetJobNames(const QString& instrumentName, const QString& deviceName, const QString& userName, const QString& jobName);

    /*
    Method GetModelVersion
    */
    inline QString GetModelVersion(const QString& instrumentName);

    /*
    Method GetProjectNames
    */
    inline QStringList GetProjectNames(const QString& instrumentName, const QString& deviceName, const QString& userName, const QString& jobName);

    /*
    Method GetSerialNumber
    */
    inline QString GetSerialNumber(const QString& instrumentName);

    /*
    Method GetSoftwareVersions
    */
    inline QStringList GetSoftwareVersions(const QString& instrumentName);

    /*
    Method GetUserNames
    */
    inline QStringList GetUserNames(const QString& instrumentName);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class BASICENVREMOTEAPI_EXPORT I2250Archive : public AxObject
{
public:
    I2250Archive(IDispatch *subobject = 0, AxObject *parent = 0)
    : AxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Method CreateArchive
    */
    inline void CreateArchive(const QString& archivePath, const QString& newArchiveName);

    /*
    Method DeleteArchive
    */
    inline void DeleteArchive(const QString& archiveName);

    /*
    Method TransferDataToArchive
    */
    inline void TransferDataToArchive(const QString& instrumentName, const QString& deviceName, const QString& userName, const QString& jobOrProjectName, const QString& toArchiveName);

    /*
    Method TransferDataToInstrument
    */
    inline void TransferDataToInstrument(const QString& fromArchiveName, const QString& fromUserName, const QString& jobOrProjectName, const QString& instrumentName, const QString& deviceName);

    /*
    Method TransferInProgress
    */
    inline bool TransferInProgress(const QString& instrumentName);

    /*
    Method TransferPercentage
    */
    inline int TransferPercentage(const QString& instrumentName);

    /*
    Method TransferTemplateToArchive
    */
    inline void TransferTemplateToArchive(const QString& instrumentName, const QString& deviceName, const QString& userName, const QString& templateName, const QString& toArchiveName);

    /*
    Method TransferTemplateToInstrument
    */
    inline void TransferTemplateToInstrument(const QString& fromArchiveName, const QString& fromUserName, const QString& templateName, const QString& instrumentName, const QString& deviceName);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class BASICENVREMOTEAPI_EXPORT I2250Export : public AxObject
{
public:
    I2250Export(IDispatch *subobject = 0, AxObject *parent = 0)
    : AxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Method ExportInProgress
    */
    inline bool ExportInProgress();

    /*
    Method ExportPercentage
    */
    inline int ExportPercentage();

    /*
    Method ExportProjectToXML
    */
    inline void ExportProjectToXML(const QString& fromArchiveName, const QString& fromUserName, const QString& fromProjectName, bool exportTotalBB, bool exportTotalSpectra, bool exportTotalLNSpectra, bool exportLoggedBB, bool exportLoggedSpectra, bool exportLoggedLNSpectra, bool exportFastLog, bool exportSetup, bool exportStatistics, bool exportRTRoom, bool exportRTSpectra, bool exportRTDecay, const QString& destinationPath, const QString& exportLanguage);

    /*
    Method SupportedExportLanguages
    */
    inline QStringList SupportedExportLanguages();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class BASICENVREMOTEAPI_EXPORT I2250Update : public AxObject
{
public:
    I2250Update(IDispatch *subobject = 0, AxObject *parent = 0)
    : AxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Method AvailableSoftwarePackages
    */
    inline QStringList AvailableSoftwarePackages();

    /*
    Method Update2250Software
    */
    inline void Update2250Software(const QString& instrumentName, const QString& packageName, int installationType, const QStringList& languages);

    /*
    Method UpdateInProgress
    */
    inline bool UpdateInProgress(const QString& instrumentName);

    /*
    Method UpdatePercentage
    */
    inline int UpdatePercentage(const QString& instrumentName);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class BASICENVREMOTEAPI_EXPORT I2250Info : public AxObject
{
public:
    I2250Info(IDispatch *subobject = 0, AxObject *parent = 0)
    : AxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Method Commands
    */
    inline QStringList Commands(const QString& instrumentName);

    /*
    Method Outputs
    */
    inline QStringList Outputs(const QString& instrumentName);

    /*
    Method Parameters
    */
    inline QStringList Parameters(const QString& instrumentName);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// Actual coclasses
class BASICENVREMOTEAPI_EXPORT RemoteAPI : public AxObject
{
public:
    RemoteAPI(QObject *parent = 0)
    : AxObject(parent)
    {
        setControl("{5bc25821-4936-4e9e-9acf-12e12adda9cc}");
    }

    RemoteAPI(IRemoteAPI *iface)
    : AxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    RemoteAPI(IRemoteInfo *iface)
    : AxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*RemoteAPI(IDisposable *iface)
    : AxObject()
    {
        initializeFrom(iface);
        delete iface;
    }*/

    RemoteAPI(I2250Connect *iface)
    : AxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    RemoteAPI(I2250Control *iface)
    : AxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    RemoteAPI(I2250Instrument *iface)
    : AxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    RemoteAPI(I2250Archive *iface)
    : AxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    RemoteAPI(I2250Export *iface)
    : AxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    RemoteAPI(I2250Update *iface)
    : AxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property ToString
    */
    inline QString ToString() const; //Returns the value of ToString

    /*
    Property UndefinedDateTime
    */
    inline QDateTime UndefinedDateTime() const; //Returns the value of UndefinedDateTime

    /*
    Property UndefinedDouble
    */
    inline double UndefinedDouble() const; //Returns the value of UndefinedDouble

    /*
    Property UndefinedEnum
    */
    inline int UndefinedEnum() const; //Returns the value of UndefinedEnum

    /*
    Property UndefinedInt16
    */
    inline int UndefinedInt16() const; //Returns the value of UndefinedInt16

    /*
    Property UndefinedInt32
    */
    inline int UndefinedInt32() const; //Returns the value of UndefinedInt32

    /*
    Property UndefinedSingle
    */
    inline double UndefinedSingle() const; //Returns the value of UndefinedSingle

    /*
    Method AvailableSoftwarePackages
    */
    inline QStringList AvailableSoftwarePackages();

    /*
    Method Close
    */
    inline void Close();

    /*
    Method Commands
    */
    inline QStringList Commands();

    /*
    Method Connect
    */
    inline void Connect(const QString& instrumentName);

    /*
    Method CreateArchive
    */
    inline void CreateArchive(const QString& archivePath, const QString& newArchiveName);

    /*
    Method CreateJob
    */
    inline void CreateJob(const QString& instrumentName, const QString& deviceName, const QString& userName, const QString& jobName, const QString& newJobName);

    /*
    Method CurrentDevice
    */
    inline QString CurrentDevice(const QString& instrumentName);

    /*
    Method CurrentJob
    */
    inline QString CurrentJob(const QString& instrumentName);

    /*
    Method CurrentProject
    */
    inline QString CurrentProject(const QString& instrumentName);

    /*
    Method CurrentTemplate
    */
    inline QString CurrentTemplate(const QString& instrumentName);

    /*
    Method CurrentUser
    */
    inline QString CurrentUser(const QString& instrumentName);

    /*
    Method DeleteArchive
    */
    inline void DeleteArchive(const QString& archiveName);

    /*
    Method DeleteJob
    */
    inline void DeleteJob(const QString& instrumentName, const QString& deviceName, const QString& userName, const QString& jobName);

    /*
    Method DeleteProject
    */
    inline void DeleteProject(const QString& instrumentName, const QString& deviceName, const QString& userName, const QString& projectName);

    /*
    Method Disconnect
    */
    inline void Disconnect();

    /*
    Method Disconnect
    */
    inline void Disconnect(const QString& instrumentName);

    /*
    Method Dispose
    */
    inline void Dispose();

    /*
    Method Equals
    */
    inline bool Equals(const QVariant& obj);

    /*
    Method ExecuteCommand
    */
    inline void ExecuteCommand(const QString& commandName);

    /*
    Method ExecuteCommand
    */
    inline void ExecuteCommand(const QString& instrumentName, const QString& commandName);

    /*
    Method ExecuteCommandWithParameter
    */
    inline void ExecuteCommandWithParameter(const QString& commandName, const QString& commandParameter);

    /*
    Method ExecuteCommandWithParameter
    */
    inline void ExecuteCommandWithParameter(const QString& instrumentName, const QString& commandName, const QString& commandParameter);

    /*
    Method ExportInProgress
    */
    inline bool ExportInProgress();

    /*
    Method ExportPercentage
    */
    inline int ExportPercentage();

    /*
    Method ExportProjectToXML
    */
    inline void ExportProjectToXML(const QString& fromArchiveName, const QString& fromUserName, const QString& fromProjectName, bool exportTotalBB, bool exportTotalSpectra, bool exportTotalLNSpectra, bool exportLoggedBB, bool exportLoggedSpectra, bool exportLoggedLNSpectra, bool exportFastLog, bool exportSetup, bool exportStatistics, bool exportRTRoom, bool exportRTSpectra, bool exportRTDecay, const QString& destinationPath, const QString& exportLanguage);

    /*
    Method GetDeviceNames
    */
    inline QStringList GetDeviceNames(const QString& instrumentName);

    /*
    Method GetHardwareVersion
    */
    inline QString GetHardwareVersion(const QString& instrumentName);

    /*
    Method GetHashCode
    */
    inline int GetHashCode();

    /*
    Method GetIPAddress
    */
    inline QString GetIPAddress(const QString& instrumentName);

    /*
    Method GetInstrumentNames
    */
    inline QStringList GetInstrumentNames();

    /*
    Method GetInstrumentType
    */
    inline QString GetInstrumentType(const QString& instrumentName);

    /*
    Method GetJobNames
    */
    inline QStringList GetJobNames(const QString& instrumentName, const QString& deviceName, const QString& userName, const QString& jobName);

    /*
    Method GetModelVersion
    */
    inline QString GetModelVersion(const QString& instrumentName);

    /*
    Method GetParameterDateTime
    */
    inline QDateTime GetParameterDateTime(const QString& instrumentName, const QString& parameterName);

    /*
    Method GetParameterDateTimeZone
    */
    inline QDateTime GetParameterDateTimeZone(const QString& instrumentName, const QString& parameterName);

    /*
    Method GetParameterDouble
    */
    inline double GetParameterDouble(const QString& instrumentName, const QString& parameterName);

    /*
    Method GetParameterEnum
    */
    inline int GetParameterEnum(const QString& parameterName);

    /*
    Method GetParameterEnum
    */
    inline int GetParameterEnum(const QString& instrumentName, const QString& parameterName);

    /*
    Method GetParameterInt16
    */
    inline int GetParameterInt16(const QString& parameterName);

    /*
    Method GetParameterInt16
    */
    inline int GetParameterInt16(const QString& instrumentName, const QString& parameterName);

    /*
    Method GetParameterInt32
    */
    inline int GetParameterInt32(const QString& parameterName);

    /*
    Method GetParameterInt32
    */
    inline int GetParameterInt32(const QString& instrumentName, const QString& parameterName);

    /*
    Method GetParameterSingle
    */
    inline double GetParameterSingle(const QString& parameterName);

    /*
    Method GetParameterSingle
    */
    inline double GetParameterSingle(const QString& instrumentName, const QString& parameterName);

    /*
    Method GetParameterString
    */
    inline QString GetParameterString(const QString& instrumentName, const QString& parameterName);

    /*
    Method GetParameterValues
    */
    inline QStringList GetParameterValues(const QString& instrumentName, const QString& parameterName, int& indexOfCurrent);

    /*
    Method GetProjectNames
    */
    inline QStringList GetProjectNames(const QString& instrumentName, const QString& deviceName, const QString& userName, const QString& jobName);

    /*
    Method GetSerialNumber
    */
    inline QString GetSerialNumber(const QString& instrumentName);

    /*
    Method GetSoftwareVersions
    */
    inline QStringList GetSoftwareVersions(const QString& instrumentName);

    /*
    Method GetType
    */
    inline mscorlib::_Type* GetType();

    /*
    Method GetUserNames
    */
    inline QStringList GetUserNames(const QString& instrumentName);

    /*
    Method IsConnected
    */
    inline bool IsConnected(const QString& instrumentName);

    /*
    Method NameOfConnectedInstrument
    */
    inline QString NameOfConnectedInstrument();

    /*
    Method Outputs
    */
    inline QStringList Outputs();

    /*
    Method Parameters
    */
    inline QStringList Parameters();

    /*
    Method ReadOutputDateTime
    */
    inline QDateTime ReadOutputDateTime(const QString& outputName);

    /*
    Method ReadOutputDateTime
    */
    inline QDateTime ReadOutputDateTime(const QString& instrumentName, const QString& outputName);

    /*
    Method ReadOutputDateTimeZone
    */
    inline QDateTime ReadOutputDateTimeZone(const QString& instrumentName, const QString& outputName);

    /*
    Method ReadOutputDouble
    */
    inline double ReadOutputDouble(const QString& outputName);

    /*
    Method ReadOutputDouble
    */
    inline double ReadOutputDouble(const QString& instrumentName, const QString& outputName);

    /*
    Method ReadOutputEnum
    */
    inline int ReadOutputEnum(const QString& outputName);

    /*
    Method ReadOutputEnum
    */
    inline int ReadOutputEnum(const QString& instrumentName, const QString& outputName);

    /*
    Method ReadOutputInt16
    */
    inline int ReadOutputInt16(const QString& outputName);

    /*
    Method ReadOutputInt16
    */
    inline int ReadOutputInt16(const QString& instrumentName, const QString& outputName);

    /*
    Method ReadOutputInt32
    */
    inline int ReadOutputInt32(const QString& outputName);

    /*
    Method ReadOutputInt32
    */
    inline int ReadOutputInt32(const QString& instrumentName, const QString& outputName);

    /*
    Method ReadOutputVectorInt16
    */
    inline QList<int> ReadOutputVectorInt16(const QString& outputName);

    /*
    Method ReadOutputVectorInt16
    */
    inline QList<int> ReadOutputVectorInt16(const QString& instrumentName, const QString& outputName);

    /*
    Method ReadSoundExposureLevel
    */
    inline int ReadSoundExposureLevel(const QString& instrumentName, const QString& outputName);

    /*
    Method SetParameterDateTime
    */
    inline void SetParameterDateTime(const QString& instrumentName, const QString& parameterName, const QDateTime& parameterValue);

    /*
    Method SetParameterDouble
    */
    inline void SetParameterDouble(const QString& instrumentName, const QString& parameterName, double parameterValue);

    /*
    Method SetParameterEnum
    */
    inline void SetParameterEnum(const QString& instrumentName, const QString& parameterName, int parameterValue);

    /*
    Method SetParameterEnum
    */
    inline void SetParameterEnum(const QString& parameterName, int parameterValue);

    /*
    Method SetParameterInt16
    */
    inline void SetParameterInt16(const QString& instrumentName, const QString& parameterName, int parameterValue);

    /*
    Method SetParameterInt16
    */
    inline void SetParameterInt16(const QString& parameterName, int parameterValue);

    /*
    Method SetParameterInt32
    */
    inline void SetParameterInt32(const QString& instrumentName, const QString& parameterName, int parameterValue);

    /*
    Method SetParameterInt32
    */
    inline void SetParameterInt32(const QString& parameterName, int parameterValue);

    /*
    Method SetParameterSingle
    */
    inline void SetParameterSingle(const QString& instrumentName, const QString& parameterName, double parameterValue);

    /*
    Method SetParameterSingle
    */
    inline void SetParameterSingle(const QString& parameterName, double parameterValue);

    /*
    Method SetParameterString
    */
    inline void SetParameterString(const QString& instrumentName, const QString& parameterName, const QString& parameterValue);

    /*
    Method SetParameterValue
    */
    inline void SetParameterValue(const QString& instrumentName, const QString& parameterName, const QString& newValue);

    /*
    Method SupportedExportLanguages
    */
    inline QStringList SupportedExportLanguages();

    /*
    Method TransferDataToArchive
    */
    inline void TransferDataToArchive(const QString& instrumentName, const QString& deviceName, const QString& userName, const QString& jobOrProjectName, const QString& toArchiveName);

    /*
    Method TransferDataToInstrument
    */
    inline void TransferDataToInstrument(const QString& fromArchiveName, const QString& fromUserName, const QString& jobOrProjectName, const QString& instrumentName, const QString& deviceName);

    /*
    Method TransferInProgress
    */
    inline bool TransferInProgress(const QString& instrumentName);

    /*
    Method TransferPercentage
    */
    inline int TransferPercentage(const QString& instrumentName);

    /*
    Method TransferTemplateToArchive
    */
    inline void TransferTemplateToArchive(const QString& instrumentName, const QString& deviceName, const QString& userName, const QString& templateName, const QString& toArchiveName);

    /*
    Method TransferTemplateToInstrument
    */
    inline void TransferTemplateToInstrument(const QString& fromArchiveName, const QString& fromUserName, const QString& templateName, const QString& instrumentName, const QString& deviceName);

    /*
    Method Update2250Software
    */
    inline void Update2250Software(const QString& instrumentName, const QString& packageName, int installationType, const QStringList& languages);

    /*
    Method UpdateInProgress
    */
    inline bool UpdateInProgress(const QString& instrumentName);

    /*
    Method UpdatePercentage
    */
    inline int UpdatePercentage(const QString& instrumentName);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// member function implementation
#ifndef QAX_DUMPCPP_BASICENVREMOTEAPI_NOINLINES
inline QDateTime IRemoteAPI::UndefinedDateTime() const
{
    QVariant qax_result = property("UndefinedDateTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline double IRemoteAPI::UndefinedDouble() const
{
    QVariant qax_result = property("UndefinedDouble");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}

inline int IRemoteAPI::UndefinedEnum() const
{
    QVariant qax_result = property("UndefinedEnum");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IRemoteAPI::UndefinedInt16() const
{
    QVariant qax_result = property("UndefinedInt16");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IRemoteAPI::UndefinedInt32() const
{
    QVariant qax_result = property("UndefinedInt32");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline double IRemoteAPI::UndefinedSingle() const
{
    QVariant qax_result = property("UndefinedSingle");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}

inline void IRemoteAPI::Close()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void IRemoteAPI::Connect(const QString& instrumentName)
{
    void *_a[] = {0, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void IRemoteAPI::Disconnect()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void IRemoteAPI::ExecuteCommand(const QString& commandName)
{
    void *_a[] = {0, (void*)&commandName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void IRemoteAPI::ExecuteCommandWithParameter(const QString& commandName, const QString& commandParameter)
{
    void *_a[] = {0, (void*)&commandName, (void*)&commandParameter};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline int IRemoteAPI::GetParameterEnum(const QString& parameterName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&parameterName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int IRemoteAPI::GetParameterInt16(const QString& parameterName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&parameterName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int IRemoteAPI::GetParameterInt32(const QString& parameterName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&parameterName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline double IRemoteAPI::GetParameterSingle(const QString& parameterName)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&parameterName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline QDateTime IRemoteAPI::ReadOutputDateTime(const QString& outputName)
{
    QDateTime qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&outputName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline double IRemoteAPI::ReadOutputDouble(const QString& outputName)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&outputName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int IRemoteAPI::ReadOutputEnum(const QString& outputName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&outputName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int IRemoteAPI::ReadOutputInt16(const QString& outputName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&outputName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int IRemoteAPI::ReadOutputInt32(const QString& outputName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&outputName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline QList<int> IRemoteAPI::ReadOutputVectorInt16(const QString& outputName)
{
    QList<int> qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&outputName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline void IRemoteAPI::SetParameterEnum(const QString& parameterName, int parameterValue)
{
    void *_a[] = {0, (void*)&parameterName, (void*)&parameterValue};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void IRemoteAPI::SetParameterInt16(const QString& parameterName, int parameterValue)
{
    void *_a[] = {0, (void*)&parameterName, (void*)&parameterValue};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void IRemoteAPI::SetParameterInt32(const QString& parameterName, int parameterValue)
{
    void *_a[] = {0, (void*)&parameterName, (void*)&parameterValue};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline void IRemoteAPI::SetParameterSingle(const QString& parameterName, double parameterValue)
{
    void *_a[] = {0, (void*)&parameterName, (void*)&parameterValue};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}


inline QStringList IRemoteInfo::Commands()
{
    QStringList qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline QStringList IRemoteInfo::Outputs()
{
    QStringList qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline QStringList IRemoteInfo::Parameters()
{
    QStringList qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}


inline void I2250Connect::Close()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void I2250Connect::Connect(const QString& instrumentName)
{
    void *_a[] = {0, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void I2250Connect::Disconnect(const QString& instrumentName)
{
    void *_a[] = {0, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline QStringList I2250Connect::GetInstrumentNames()
{
    QStringList qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline bool I2250Connect::IsConnected(const QString& instrumentName)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline QString I2250Connect::NameOfConnectedInstrument()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}


inline QDateTime I2250Control::UndefinedDateTime() const
{
    QVariant qax_result = property("UndefinedDateTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline double I2250Control::UndefinedDouble() const
{
    QVariant qax_result = property("UndefinedDouble");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}

inline int I2250Control::UndefinedEnum() const
{
    QVariant qax_result = property("UndefinedEnum");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int I2250Control::UndefinedInt16() const
{
    QVariant qax_result = property("UndefinedInt16");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int I2250Control::UndefinedInt32() const
{
    QVariant qax_result = property("UndefinedInt32");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline double I2250Control::UndefinedSingle() const
{
    QVariant qax_result = property("UndefinedSingle");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}

inline void I2250Control::ExecuteCommand(const QString& instrumentName, const QString& commandName)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&commandName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void I2250Control::ExecuteCommandWithParameter(const QString& instrumentName, const QString& commandName, const QString& commandParameter)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&commandName, (void*)&commandParameter};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline QDateTime I2250Control::GetParameterDateTime(const QString& instrumentName, const QString& parameterName)
{
    QDateTime qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&parameterName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline QDateTime I2250Control::GetParameterDateTimeZone(const QString& instrumentName, const QString& parameterName)
{
    QDateTime qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&parameterName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline double I2250Control::GetParameterDouble(const QString& instrumentName, const QString& parameterName)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&parameterName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int I2250Control::GetParameterEnum(const QString& instrumentName, const QString& parameterName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&parameterName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int I2250Control::GetParameterInt16(const QString& instrumentName, const QString& parameterName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&parameterName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int I2250Control::GetParameterInt32(const QString& instrumentName, const QString& parameterName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&parameterName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline double I2250Control::GetParameterSingle(const QString& instrumentName, const QString& parameterName)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&parameterName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline QString I2250Control::GetParameterString(const QString& instrumentName, const QString& parameterName)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&parameterName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline QStringList I2250Control::GetParameterValues(const QString& instrumentName, const QString& parameterName, int& indexOfCurrent)
{
    QStringList qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&parameterName, (void*)&indexOfCurrent};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline QDateTime I2250Control::ReadOutputDateTime(const QString& instrumentName, const QString& outputName)
{
    QDateTime qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&outputName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline QDateTime I2250Control::ReadOutputDateTimeZone(const QString& instrumentName, const QString& outputName)
{
    QDateTime qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&outputName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline double I2250Control::ReadOutputDouble(const QString& instrumentName, const QString& outputName)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&outputName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int I2250Control::ReadOutputEnum(const QString& instrumentName, const QString& outputName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&outputName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline int I2250Control::ReadOutputInt16(const QString& instrumentName, const QString& outputName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&outputName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline int I2250Control::ReadOutputInt32(const QString& instrumentName, const QString& outputName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&outputName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline QList<int> I2250Control::ReadOutputVectorInt16(const QString& instrumentName, const QString& outputName)
{
    QList<int> qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&outputName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline int I2250Control::ReadSoundExposureLevel(const QString& instrumentName, const QString& outputName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&outputName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline void I2250Control::SetParameterDateTime(const QString& instrumentName, const QString& parameterName, const QDateTime& parameterValue)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&parameterName, (void*)&parameterValue};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline void I2250Control::SetParameterDouble(const QString& instrumentName, const QString& parameterName, double parameterValue)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&parameterName, (void*)&parameterValue};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline void I2250Control::SetParameterEnum(const QString& instrumentName, const QString& parameterName, int parameterValue)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&parameterName, (void*)&parameterValue};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline void I2250Control::SetParameterInt16(const QString& instrumentName, const QString& parameterName, int parameterValue)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&parameterName, (void*)&parameterValue};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
}

inline void I2250Control::SetParameterInt32(const QString& instrumentName, const QString& parameterName, int parameterValue)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&parameterName, (void*)&parameterValue};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
}

inline void I2250Control::SetParameterSingle(const QString& instrumentName, const QString& parameterName, double parameterValue)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&parameterName, (void*)&parameterValue};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
}

inline void I2250Control::SetParameterString(const QString& instrumentName, const QString& parameterName, const QString& parameterValue)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&parameterName, (void*)&parameterValue};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
}

inline void I2250Control::SetParameterValue(const QString& instrumentName, const QString& parameterName, const QString& newValue)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&parameterName, (void*)&newValue};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
}


inline void I2250Instrument::CreateJob(const QString& instrumentName, const QString& deviceName, const QString& userName, const QString& jobName, const QString& newJobName)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&deviceName, (void*)&userName, (void*)&jobName, (void*)&newJobName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline QString I2250Instrument::CurrentDevice(const QString& instrumentName)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline QString I2250Instrument::CurrentJob(const QString& instrumentName)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline QString I2250Instrument::CurrentProject(const QString& instrumentName)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline QString I2250Instrument::CurrentTemplate(const QString& instrumentName)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline QString I2250Instrument::CurrentUser(const QString& instrumentName)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline void I2250Instrument::DeleteJob(const QString& instrumentName, const QString& deviceName, const QString& userName, const QString& jobName)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&deviceName, (void*)&userName, (void*)&jobName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void I2250Instrument::DeleteProject(const QString& instrumentName, const QString& deviceName, const QString& userName, const QString& projectName)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&deviceName, (void*)&userName, (void*)&projectName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline QStringList I2250Instrument::GetDeviceNames(const QString& instrumentName)
{
    QStringList qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline QString I2250Instrument::GetHardwareVersion(const QString& instrumentName)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline QString I2250Instrument::GetIPAddress(const QString& instrumentName)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline QString I2250Instrument::GetInstrumentType(const QString& instrumentName)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline QStringList I2250Instrument::GetJobNames(const QString& instrumentName, const QString& deviceName, const QString& userName, const QString& jobName)
{
    QStringList qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&deviceName, (void*)&userName, (void*)&jobName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline QString I2250Instrument::GetModelVersion(const QString& instrumentName)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline QStringList I2250Instrument::GetProjectNames(const QString& instrumentName, const QString& deviceName, const QString& userName, const QString& jobName)
{
    QStringList qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&deviceName, (void*)&userName, (void*)&jobName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline QString I2250Instrument::GetSerialNumber(const QString& instrumentName)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline QStringList I2250Instrument::GetSoftwareVersions(const QString& instrumentName)
{
    QStringList qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline QStringList I2250Instrument::GetUserNames(const QString& instrumentName)
{
    QStringList qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}


inline void I2250Archive::CreateArchive(const QString& archivePath, const QString& newArchiveName)
{
    void *_a[] = {0, (void*)&archivePath, (void*)&newArchiveName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void I2250Archive::DeleteArchive(const QString& archiveName)
{
    void *_a[] = {0, (void*)&archiveName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void I2250Archive::TransferDataToArchive(const QString& instrumentName, const QString& deviceName, const QString& userName, const QString& jobOrProjectName, const QString& toArchiveName)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&deviceName, (void*)&userName, (void*)&jobOrProjectName, (void*)&toArchiveName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void I2250Archive::TransferDataToInstrument(const QString& fromArchiveName, const QString& fromUserName, const QString& jobOrProjectName, const QString& instrumentName, const QString& deviceName)
{
    void *_a[] = {0, (void*)&fromArchiveName, (void*)&fromUserName, (void*)&jobOrProjectName, (void*)&instrumentName, (void*)&deviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline bool I2250Archive::TransferInProgress(const QString& instrumentName)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int I2250Archive::TransferPercentage(const QString& instrumentName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline void I2250Archive::TransferTemplateToArchive(const QString& instrumentName, const QString& deviceName, const QString& userName, const QString& templateName, const QString& toArchiveName)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&deviceName, (void*)&userName, (void*)&templateName, (void*)&toArchiveName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void I2250Archive::TransferTemplateToInstrument(const QString& fromArchiveName, const QString& fromUserName, const QString& templateName, const QString& instrumentName, const QString& deviceName)
{
    void *_a[] = {0, (void*)&fromArchiveName, (void*)&fromUserName, (void*)&templateName, (void*)&instrumentName, (void*)&deviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}


inline bool I2250Export::ExportInProgress()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int I2250Export::ExportPercentage()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline void I2250Export::ExportProjectToXML(const QString& fromArchiveName, const QString& fromUserName, const QString& fromProjectName, bool exportTotalBB, bool exportTotalSpectra, bool exportTotalLNSpectra, bool exportLoggedBB, bool exportLoggedSpectra, bool exportLoggedLNSpectra, bool exportFastLog, bool exportSetup, bool exportStatistics, bool exportRTRoom, bool exportRTSpectra, bool exportRTDecay, const QString& destinationPath, const QString& exportLanguage)
{
    void *_a[] = {0, (void*)&fromArchiveName, (void*)&fromUserName, (void*)&fromProjectName, (void*)&exportTotalBB, (void*)&exportTotalSpectra, (void*)&exportTotalLNSpectra, (void*)&exportLoggedBB, (void*)&exportLoggedSpectra, (void*)&exportLoggedLNSpectra, (void*)&exportFastLog, (void*)&exportSetup, (void*)&exportStatistics, (void*)&exportRTRoom, (void*)&exportRTSpectra, (void*)&exportRTDecay, (void*)&destinationPath, (void*)&exportLanguage};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline QStringList I2250Export::SupportedExportLanguages()
{
    QStringList qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}


inline QStringList I2250Update::AvailableSoftwarePackages()
{
    QStringList qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline void I2250Update::Update2250Software(const QString& instrumentName, const QString& packageName, int installationType, const QStringList& languages)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&packageName, (void*)&installationType, (void*)&languages};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline bool I2250Update::UpdateInProgress(const QString& instrumentName)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int I2250Update::UpdatePercentage(const QString& instrumentName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}


inline QString RemoteAPI::ToString() const
{
    QVariant qax_result = property("ToString");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime RemoteAPI::UndefinedDateTime() const
{
    QVariant qax_result = property("UndefinedDateTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline double RemoteAPI::UndefinedDouble() const
{
    QVariant qax_result = property("UndefinedDouble");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}

inline int RemoteAPI::UndefinedEnum() const
{
    QVariant qax_result = property("UndefinedEnum");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int RemoteAPI::UndefinedInt16() const
{
    QVariant qax_result = property("UndefinedInt16");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int RemoteAPI::UndefinedInt32() const
{
    QVariant qax_result = property("UndefinedInt32");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline double RemoteAPI::UndefinedSingle() const
{
    QVariant qax_result = property("UndefinedSingle");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}

inline QStringList RemoteAPI::AvailableSoftwarePackages()
{
    QStringList qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline void RemoteAPI::Close()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline QStringList RemoteAPI::Commands()
{
    QStringList qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void RemoteAPI::Connect(const QString& instrumentName)
{
    void *_a[] = {0, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void RemoteAPI::CreateArchive(const QString& archivePath, const QString& newArchiveName)
{
    void *_a[] = {0, (void*)&archivePath, (void*)&newArchiveName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void RemoteAPI::CreateJob(const QString& instrumentName, const QString& deviceName, const QString& userName, const QString& jobName, const QString& newJobName)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&deviceName, (void*)&userName, (void*)&jobName, (void*)&newJobName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline QString RemoteAPI::CurrentDevice(const QString& instrumentName)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline QString RemoteAPI::CurrentJob(const QString& instrumentName)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline QString RemoteAPI::CurrentProject(const QString& instrumentName)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline QString RemoteAPI::CurrentTemplate(const QString& instrumentName)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline QString RemoteAPI::CurrentUser(const QString& instrumentName)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline void RemoteAPI::DeleteArchive(const QString& archiveName)
{
    void *_a[] = {0, (void*)&archiveName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void RemoteAPI::DeleteJob(const QString& instrumentName, const QString& deviceName, const QString& userName, const QString& jobName)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&deviceName, (void*)&userName, (void*)&jobName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void RemoteAPI::DeleteProject(const QString& instrumentName, const QString& deviceName, const QString& userName, const QString& projectName)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&deviceName, (void*)&userName, (void*)&projectName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline void RemoteAPI::Disconnect()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void RemoteAPI::Disconnect(const QString& instrumentName)
{
    void *_a[] = {0, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void RemoteAPI::Dispose()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline bool RemoteAPI::Equals(const QVariant& obj)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&obj};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline void RemoteAPI::ExecuteCommand(const QString& commandName)
{
    void *_a[] = {0, (void*)&commandName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline void RemoteAPI::ExecuteCommand(const QString& instrumentName, const QString& commandName)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&commandName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline void RemoteAPI::ExecuteCommandWithParameter(const QString& commandName, const QString& commandParameter)
{
    void *_a[] = {0, (void*)&commandName, (void*)&commandParameter};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline void RemoteAPI::ExecuteCommandWithParameter(const QString& instrumentName, const QString& commandName, const QString& commandParameter)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&commandName, (void*)&commandParameter};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline bool RemoteAPI::ExportInProgress()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline int RemoteAPI::ExportPercentage()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
    return qax_result;
}

inline void RemoteAPI::ExportProjectToXML(const QString& fromArchiveName, const QString& fromUserName, const QString& fromProjectName, bool exportTotalBB, bool exportTotalSpectra, bool exportTotalLNSpectra, bool exportLoggedBB, bool exportLoggedSpectra, bool exportLoggedLNSpectra, bool exportFastLog, bool exportSetup, bool exportStatistics, bool exportRTRoom, bool exportRTSpectra, bool exportRTDecay, const QString& destinationPath, const QString& exportLanguage)
{
    void *_a[] = {0, (void*)&fromArchiveName, (void*)&fromUserName, (void*)&fromProjectName, (void*)&exportTotalBB, (void*)&exportTotalSpectra, (void*)&exportTotalLNSpectra, (void*)&exportLoggedBB, (void*)&exportLoggedSpectra, (void*)&exportLoggedLNSpectra, (void*)&exportFastLog, (void*)&exportSetup, (void*)&exportStatistics, (void*)&exportRTRoom, (void*)&exportRTSpectra, (void*)&exportRTDecay, (void*)&destinationPath, (void*)&exportLanguage};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
}

inline QStringList RemoteAPI::GetDeviceNames(const QString& instrumentName)
{
    QStringList qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
    return qax_result;
}

inline QString RemoteAPI::GetHardwareVersion(const QString& instrumentName)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
    return qax_result;
}

inline int RemoteAPI::GetHashCode()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}

inline QString RemoteAPI::GetIPAddress(const QString& instrumentName)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline QStringList RemoteAPI::GetInstrumentNames()
{
    QStringList qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline QString RemoteAPI::GetInstrumentType(const QString& instrumentName)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline QStringList RemoteAPI::GetJobNames(const QString& instrumentName, const QString& deviceName, const QString& userName, const QString& jobName)
{
    QStringList qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&deviceName, (void*)&userName, (void*)&jobName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline QString RemoteAPI::GetModelVersion(const QString& instrumentName)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline QDateTime RemoteAPI::GetParameterDateTime(const QString& instrumentName, const QString& parameterName)
{
    QDateTime qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&parameterName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline QDateTime RemoteAPI::GetParameterDateTimeZone(const QString& instrumentName, const QString& parameterName)
{
    QDateTime qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&parameterName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline double RemoteAPI::GetParameterDouble(const QString& instrumentName, const QString& parameterName)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&parameterName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline int RemoteAPI::GetParameterEnum(const QString& parameterName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&parameterName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}

inline int RemoteAPI::GetParameterEnum(const QString& instrumentName, const QString& parameterName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&parameterName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}

inline int RemoteAPI::GetParameterInt16(const QString& parameterName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&parameterName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
    return qax_result;
}

inline int RemoteAPI::GetParameterInt16(const QString& instrumentName, const QString& parameterName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&parameterName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
    return qax_result;
}

inline int RemoteAPI::GetParameterInt32(const QString& parameterName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&parameterName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}

inline int RemoteAPI::GetParameterInt32(const QString& instrumentName, const QString& parameterName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&parameterName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
    return qax_result;
}

inline double RemoteAPI::GetParameterSingle(const QString& parameterName)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&parameterName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
    return qax_result;
}

inline double RemoteAPI::GetParameterSingle(const QString& instrumentName, const QString& parameterName)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&parameterName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
    return qax_result;
}

inline QString RemoteAPI::GetParameterString(const QString& instrumentName, const QString& parameterName)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&parameterName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
    return qax_result;
}

inline QStringList RemoteAPI::GetParameterValues(const QString& instrumentName, const QString& parameterName, int& indexOfCurrent)
{
    QStringList qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&parameterName, (void*)&indexOfCurrent};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
    return qax_result;
}

inline QStringList RemoteAPI::GetProjectNames(const QString& instrumentName, const QString& deviceName, const QString& userName, const QString& jobName)
{
    QStringList qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&deviceName, (void*)&userName, (void*)&jobName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 53, _a);
    return qax_result;
}

inline QString RemoteAPI::GetSerialNumber(const QString& instrumentName)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
    return qax_result;
}

inline QStringList RemoteAPI::GetSoftwareVersions(const QString& instrumentName)
{
    QStringList qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 55, _a);
    return qax_result;
}

inline mscorlib::_Type* RemoteAPI::GetType()
{
    mscorlib::_Type* qax_result = 0;
    qRegisterMetaType("mscorlib::_Type*", &qax_result);
#ifdef QAX_DUMPCPP_MSCORLIB_H
    qRegisterMetaType("mscorlib::_Type", qax_result);
#endif
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 56, _a);
    return qax_result;
}

inline QStringList RemoteAPI::GetUserNames(const QString& instrumentName)
{
    QStringList qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 57, _a);
    return qax_result;
}

inline bool RemoteAPI::IsConnected(const QString& instrumentName)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 58, _a);
    return qax_result;
}

inline QString RemoteAPI::NameOfConnectedInstrument()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 59, _a);
    return qax_result;
}

inline QStringList RemoteAPI::Outputs()
{
    QStringList qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 60, _a);
    return qax_result;
}

inline QStringList RemoteAPI::Parameters()
{
    QStringList qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 61, _a);
    return qax_result;
}

inline QDateTime RemoteAPI::ReadOutputDateTime(const QString& outputName)
{
    QDateTime qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&outputName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 62, _a);
    return qax_result;
}

inline QDateTime RemoteAPI::ReadOutputDateTime(const QString& instrumentName, const QString& outputName)
{
    QDateTime qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&outputName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 63, _a);
    return qax_result;
}

inline QDateTime RemoteAPI::ReadOutputDateTimeZone(const QString& instrumentName, const QString& outputName)
{
    QDateTime qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&outputName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 64, _a);
    return qax_result;
}

inline double RemoteAPI::ReadOutputDouble(const QString& outputName)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&outputName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 65, _a);
    return qax_result;
}

inline double RemoteAPI::ReadOutputDouble(const QString& instrumentName, const QString& outputName)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&outputName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 66, _a);
    return qax_result;
}

inline int RemoteAPI::ReadOutputEnum(const QString& outputName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&outputName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 67, _a);
    return qax_result;
}

inline int RemoteAPI::ReadOutputEnum(const QString& instrumentName, const QString& outputName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&outputName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 68, _a);
    return qax_result;
}

inline int RemoteAPI::ReadOutputInt16(const QString& outputName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&outputName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 69, _a);
    return qax_result;
}

inline int RemoteAPI::ReadOutputInt16(const QString& instrumentName, const QString& outputName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&outputName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 70, _a);
    return qax_result;
}

inline int RemoteAPI::ReadOutputInt32(const QString& outputName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&outputName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 71, _a);
    return qax_result;
}

inline int RemoteAPI::ReadOutputInt32(const QString& instrumentName, const QString& outputName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&outputName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 72, _a);
    return qax_result;
}

inline QList<int> RemoteAPI::ReadOutputVectorInt16(const QString& outputName)
{
    QList<int> qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&outputName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 73, _a);
    return qax_result;
}

inline QList<int> RemoteAPI::ReadOutputVectorInt16(const QString& instrumentName, const QString& outputName)
{
    QList<int> qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&outputName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 74, _a);
    return qax_result;
}

inline int RemoteAPI::ReadSoundExposureLevel(const QString& instrumentName, const QString& outputName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName, (void*)&outputName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 75, _a);
    return qax_result;
}

inline void RemoteAPI::SetParameterDateTime(const QString& instrumentName, const QString& parameterName, const QDateTime& parameterValue)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&parameterName, (void*)&parameterValue};
    qt_metacall(QMetaObject::InvokeMetaMethod, 76, _a);
}

inline void RemoteAPI::SetParameterDouble(const QString& instrumentName, const QString& parameterName, double parameterValue)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&parameterName, (void*)&parameterValue};
    qt_metacall(QMetaObject::InvokeMetaMethod, 77, _a);
}

inline void RemoteAPI::SetParameterEnum(const QString& instrumentName, const QString& parameterName, int parameterValue)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&parameterName, (void*)&parameterValue};
    qt_metacall(QMetaObject::InvokeMetaMethod, 78, _a);
}

inline void RemoteAPI::SetParameterEnum(const QString& parameterName, int parameterValue)
{
    void *_a[] = {0, (void*)&parameterName, (void*)&parameterValue};
    qt_metacall(QMetaObject::InvokeMetaMethod, 79, _a);
}

inline void RemoteAPI::SetParameterInt16(const QString& instrumentName, const QString& parameterName, int parameterValue)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&parameterName, (void*)&parameterValue};
    qt_metacall(QMetaObject::InvokeMetaMethod, 80, _a);
}

inline void RemoteAPI::SetParameterInt16(const QString& parameterName, int parameterValue)
{
    void *_a[] = {0, (void*)&parameterName, (void*)&parameterValue};
    qt_metacall(QMetaObject::InvokeMetaMethod, 81, _a);
}

inline void RemoteAPI::SetParameterInt32(const QString& instrumentName, const QString& parameterName, int parameterValue)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&parameterName, (void*)&parameterValue};
    qt_metacall(QMetaObject::InvokeMetaMethod, 82, _a);
}

inline void RemoteAPI::SetParameterInt32(const QString& parameterName, int parameterValue)
{
    void *_a[] = {0, (void*)&parameterName, (void*)&parameterValue};
    qt_metacall(QMetaObject::InvokeMetaMethod, 83, _a);
}

inline void RemoteAPI::SetParameterSingle(const QString& instrumentName, const QString& parameterName, double parameterValue)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&parameterName, (void*)&parameterValue};
    qt_metacall(QMetaObject::InvokeMetaMethod, 84, _a);
}

inline void RemoteAPI::SetParameterSingle(const QString& parameterName, double parameterValue)
{
    void *_a[] = {0, (void*)&parameterName, (void*)&parameterValue};
    qt_metacall(QMetaObject::InvokeMetaMethod, 85, _a);
}

inline void RemoteAPI::SetParameterString(const QString& instrumentName, const QString& parameterName, const QString& parameterValue)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&parameterName, (void*)&parameterValue};
    qt_metacall(QMetaObject::InvokeMetaMethod, 86, _a);
}

inline void RemoteAPI::SetParameterValue(const QString& instrumentName, const QString& parameterName, const QString& newValue)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&parameterName, (void*)&newValue};
    qt_metacall(QMetaObject::InvokeMetaMethod, 87, _a);
}

inline QStringList RemoteAPI::SupportedExportLanguages()
{
    QStringList qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 88, _a);
    return qax_result;
}

inline void RemoteAPI::TransferDataToArchive(const QString& instrumentName, const QString& deviceName, const QString& userName, const QString& jobOrProjectName, const QString& toArchiveName)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&deviceName, (void*)&userName, (void*)&jobOrProjectName, (void*)&toArchiveName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 89, _a);
}

inline void RemoteAPI::TransferDataToInstrument(const QString& fromArchiveName, const QString& fromUserName, const QString& jobOrProjectName, const QString& instrumentName, const QString& deviceName)
{
    void *_a[] = {0, (void*)&fromArchiveName, (void*)&fromUserName, (void*)&jobOrProjectName, (void*)&instrumentName, (void*)&deviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 90, _a);
}

inline bool RemoteAPI::TransferInProgress(const QString& instrumentName)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 91, _a);
    return qax_result;
}

inline int RemoteAPI::TransferPercentage(const QString& instrumentName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 92, _a);
    return qax_result;
}

inline void RemoteAPI::TransferTemplateToArchive(const QString& instrumentName, const QString& deviceName, const QString& userName, const QString& templateName, const QString& toArchiveName)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&deviceName, (void*)&userName, (void*)&templateName, (void*)&toArchiveName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 93, _a);
}

inline void RemoteAPI::TransferTemplateToInstrument(const QString& fromArchiveName, const QString& fromUserName, const QString& templateName, const QString& instrumentName, const QString& deviceName)
{
    void *_a[] = {0, (void*)&fromArchiveName, (void*)&fromUserName, (void*)&templateName, (void*)&instrumentName, (void*)&deviceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 94, _a);
}

inline void RemoteAPI::Update2250Software(const QString& instrumentName, const QString& packageName, int installationType, const QStringList& languages)
{
    void *_a[] = {0, (void*)&instrumentName, (void*)&packageName, (void*)&installationType, (void*)&languages};
    qt_metacall(QMetaObject::InvokeMetaMethod, 95, _a);
}

inline bool RemoteAPI::UpdateInProgress(const QString& instrumentName)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 96, _a);
    return qax_result;
}

inline int RemoteAPI::UpdatePercentage(const QString& instrumentName)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 97, _a);
    return qax_result;
}


inline QStringList I2250Info::Commands(const QString& instrumentName)
{
    QStringList qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline QStringList I2250Info::Outputs(const QString& instrumentName)
{
    QStringList qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline QStringList I2250Info::Parameters(const QString& instrumentName)
{
    QStringList qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&instrumentName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}



#endif

}

template<>
inline void *qMetaTypeConstructHelper(const BasicEnvRemoteAPI::IRemoteAPI *t)
{ Q_ASSERT(!t); return new BasicEnvRemoteAPI::IRemoteAPI; }

template<>
inline void *qMetaTypeConstructHelper(const BasicEnvRemoteAPI::IRemoteInfo *t)
{ Q_ASSERT(!t); return new BasicEnvRemoteAPI::IRemoteInfo; }

template<>
inline void *qMetaTypeConstructHelper(const BasicEnvRemoteAPI::I2250Connect *t)
{ Q_ASSERT(!t); return new BasicEnvRemoteAPI::I2250Connect; }

template<>
inline void *qMetaTypeConstructHelper(const BasicEnvRemoteAPI::I2250Control *t)
{ Q_ASSERT(!t); return new BasicEnvRemoteAPI::I2250Control; }

template<>
inline void *qMetaTypeConstructHelper(const BasicEnvRemoteAPI::I2250Instrument *t)
{ Q_ASSERT(!t); return new BasicEnvRemoteAPI::I2250Instrument; }

template<>
inline void *qMetaTypeConstructHelper(const BasicEnvRemoteAPI::I2250Archive *t)
{ Q_ASSERT(!t); return new BasicEnvRemoteAPI::I2250Archive; }

template<>
inline void *qMetaTypeConstructHelper(const BasicEnvRemoteAPI::I2250Export *t)
{ Q_ASSERT(!t); return new BasicEnvRemoteAPI::I2250Export; }

template<>
inline void *qMetaTypeConstructHelper(const BasicEnvRemoteAPI::I2250Update *t)
{ Q_ASSERT(!t); return new BasicEnvRemoteAPI::I2250Update; }

template<>
inline void *qMetaTypeConstructHelper(const BasicEnvRemoteAPI::RemoteAPI *t)
{ Q_ASSERT(!t); return new BasicEnvRemoteAPI::RemoteAPI; }

template<>
inline void *qMetaTypeConstructHelper(const BasicEnvRemoteAPI::I2250Info *t)
{ Q_ASSERT(!t); return new BasicEnvRemoteAPI::I2250Info; }

#endif

