/****************************************************************************
**
** Namespace ShockwaveFlashObjects generated by dumpcpp from type library
** C:\WINDOWS\system32\Macromed\Flash\Flash6.ocx
**
****************************************************************************/

#ifndef QAX_DUMPCPP_SHOCKWAVEFLASHOBJECTS_H
#define QAX_DUMPCPP_SHOCKWAVEFLASHOBJECTS_H

// Define this symbol to __declspec(dllexport) or __declspec(dllimport)
#ifndef SHOCKWAVEFLASHOBJECTS_EXPORT
#define SHOCKWAVEFLASHOBJECTS_EXPORT
#endif

#include <qaxobject.h>
#include <qaxwidget.h>
#include <qdatetime.h>
#include <qpixmap.h>

struct IDispatch;


// Referenced namespace

namespace ShockwaveFlashObjects {

// forward declarations
    class IFlashFactory;
    class IFlashObjectInterface;
    class IDispatchEx;
    class IServiceProvider;
    class IFlashFactory;
    class IFlashObjectInterface;
    class IDispatchEx;
    class IServiceProvider;

class SHOCKWAVEFLASHOBJECTS_EXPORT IShockwaveFlash : public QAxObject
{
public:
    IShockwaveFlash(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AlignMode

    property AlignMode

    */
    inline int AlignMode() const; //Returns the value of AlignMode
    inline void SetAlignMode(int value); //Sets the value of the AlignMode property

    /*
    Property AllowScriptAccess

    property AllowScriptAccess

    */
    inline QString AllowScriptAccess() const; //Returns the value of AllowScriptAccess
    inline void SetAllowScriptAccess(const QString& value); //Sets the value of the AllowScriptAccess property

    /*
    Property BGColor

    property BGColor

    */
    inline QString BGColor() const; //Returns the value of BGColor
    inline void SetBGColor(const QString& value); //Sets the value of the BGColor property

    /*
    Property BackgroundColor

    property BackgroundColor

    */
    inline int BackgroundColor() const; //Returns the value of BackgroundColor
    inline void SetBackgroundColor(int value); //Sets the value of the BackgroundColor property

    /*
    Property Base

    property Base

    */
    inline QString Base() const; //Returns the value of Base
    inline void SetBase(const QString& value); //Sets the value of the Base property

    /*
    Property DeviceFont

    property DeviceFont

    */
    inline bool DeviceFont() const; //Returns the value of DeviceFont
    inline void SetDeviceFont(bool value); //Sets the value of the DeviceFont property

    /*
    Property EmbedMovie

    property EmbedMovie

    */
    inline bool EmbedMovie() const; //Returns the value of EmbedMovie
    inline void SetEmbedMovie(bool value); //Sets the value of the EmbedMovie property

    /*
    Property FlashVars

    property FlashVars

    */
    inline QString FlashVars() const; //Returns the value of FlashVars
    inline void SetFlashVars(const QString& value); //Sets the value of the FlashVars property

    /*
    Property FrameNum

    property FrameNum

    */
    inline int FrameNum() const; //Returns the value of FrameNum
    inline void SetFrameNum(int value); //Sets the value of the FrameNum property

    /*
    Property Loop

    property Loop

    */
    inline bool Loop() const; //Returns the value of Loop
    inline void SetLoop(bool value); //Sets the value of the Loop property

    /*
    Property Menu

    property Menu

    */
    inline bool Menu() const; //Returns the value of Menu
    inline void SetMenu(bool value); //Sets the value of the Menu property

    /*
    Property Movie

    property Movie

    */
    inline QString Movie() const; //Returns the value of Movie
    inline void SetMovie(const QString& value); //Sets the value of the Movie property

    /*
    Property Playing

    property Playing

    */
    inline bool Playing() const; //Returns the value of Playing
    inline void SetPlaying(bool value); //Sets the value of the Playing property

    /*
    Property Quality

    property Quality

    */
    inline int Quality() const; //Returns the value of Quality
    inline void SetQuality(int value); //Sets the value of the Quality property

    /*
    Property Quality2

    property Quality2

    */
    inline QString Quality2() const; //Returns the value of Quality2
    inline void SetQuality2(const QString& value); //Sets the value of the Quality2 property

    /*
    Property ReadyState

    property ReadyState

    */
    inline int ReadyState() const; //Returns the value of ReadyState

    /*
    Property SAlign

    property SAlign

    */
    inline QString SAlign() const; //Returns the value of SAlign
    inline void SetSAlign(const QString& value); //Sets the value of the SAlign property

    /*
    Property SWRemote

    property SWRemote

    */
    inline QString SWRemote() const; //Returns the value of SWRemote
    inline void SetSWRemote(const QString& value); //Sets the value of the SWRemote property

    /*
    Property Scale

    property Scale

    */
    inline QString Scale() const; //Returns the value of Scale
    inline void SetScale(const QString& value); //Sets the value of the Scale property

    /*
    Property ScaleMode

    property ScaleMode

    */
    inline int ScaleMode() const; //Returns the value of ScaleMode
    inline void SetScaleMode(int value); //Sets the value of the ScaleMode property

    /*
    Property TotalFrames

    property TotalFrames

    */
    inline int TotalFrames() const; //Returns the value of TotalFrames

    /*
    Property WMode

    property WMode

    */
    inline QString WMode() const; //Returns the value of WMode
    inline void SetWMode(const QString& value); //Sets the value of the WMode property

    /*
    Method Back

    method Back

    */
    inline void Back();

    /*
    Method CurrentFrame

    method CurrentFrame

    */
    inline int CurrentFrame();

    /*
    Method FlashVersion

    method FlashVersion

    */
    inline int FlashVersion();

    /*
    Method Forward

    method Forward

    */
    inline void Forward();

    /*
    Method FrameLoaded

    method FrameLoaded

    */
    inline bool FrameLoaded(int FrameNum);

    /*
    Method GetVariable

    method GetVariable

    */
    inline QString GetVariable(const QString& name);

    /*
    Method GotoFrame

    method GotoFrame

    */
    inline void GotoFrame(int FrameNum);

    /*
    Method IsPlaying

    method IsPlaying

    */
    inline bool IsPlaying();

    /*
    Method LoadMovie

    method LoadMovie

    */
    inline void LoadMovie(int layer, const QString& url);

    /*
    Method Pan

    method Pan

    */
    inline void Pan(int x, int y, int mode);

    /*
    Method PercentLoaded

    method PercentLoaded

    */
    inline int PercentLoaded();

    /*
    Method Play

    method Play

    */
    inline void Play();

    /*
    Method Rewind

    method Rewind

    */
    inline void Rewind();

    /*
    Method SetVariable

    method SetVariable

    */
    inline void SetVariable(const QString& name, const QString& value);

    /*
    Method SetZoomRect

    method SetZoomRect

    */
    inline void SetZoomRect(int left, int top, int right, int bottom);

    /*
    Method Stop

    method Stop

    */
    inline void Stop();

    /*
    Method StopPlay

    method StopPlay

    */
    inline void StopPlay();

    /*
    Method TCallFrame

    method TCallFrame

    */
    inline void TCallFrame(const QString& target, int FrameNum);

    /*
    Method TCallLabel

    method TCallLabel

    */
    inline void TCallLabel(const QString& target, const QString& label);

    /*
    Method TCurrentFrame

    method TCurrentFrame

    */
    inline int TCurrentFrame(const QString& target);

    /*
    Method TCurrentLabel

    method TCurrentLabel

    */
    inline QString TCurrentLabel(const QString& target);

    /*
    Method TGetProperty

    method TGetProperty

    */
    inline QString TGetProperty(const QString& target, int property);

    /*
    Method TGetPropertyAsNumber

    method TGetPropertyAsNumber

    */
    inline double TGetPropertyAsNumber(const QString& target, int property);

    /*
    Method TGetPropertyNum

    method TGetPropertyNum

    */
    inline double TGetPropertyNum(const QString& target, int property);

    /*
    Method TGotoFrame

    method TGotoFrame

    */
    inline void TGotoFrame(const QString& target, int FrameNum);

    /*
    Method TGotoLabel

    method TGotoLabel

    */
    inline void TGotoLabel(const QString& target, const QString& label);

    /*
    Method TPlay

    method TPlay

    */
    inline void TPlay(const QString& target);

    /*
    Method TSetProperty

    method TSetProperty

    */
    inline void TSetProperty(const QString& target, int property, const QString& value);

    /*
    Method TSetPropertyNum

    method TSetPropertyNum

    */
    inline void TSetPropertyNum(const QString& target, int property, double value);

    /*
    Method TStopPlay

    method TStopPlay

    */
    inline void TStopPlay(const QString& target);

    /*
    Method Zoom

    method Zoom

    */
    inline void Zoom(int factor);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// skipping event interface _IShockwaveFlashEvents

// stub for vtable-only interface
class IFlashFactory : public QAxObject {};

// stub for vtable-only interface
class IFlashObjectInterface : public QAxObject {};

// stub for vtable-only interface
class IDispatchEx : public QAxObject {};

// stub for vtable-only interface
class IServiceProvider : public QAxObject {};

// Actual coclasses
class SHOCKWAVEFLASHOBJECTS_EXPORT ShockwaveFlash : public QAxWidget
{
public:
    ShockwaveFlash(QWidget *parent = 0, Qt::WindowFlags f = 0)
    : QAxWidget(parent, f)
    {
        setControl("{d27cdb6e-ae6d-11cf-96b8-444553540000}");
    }

    ShockwaveFlash(IShockwaveFlash *iface)
    : QAxWidget()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property AlignMode

    property AlignMode

    */
    inline int AlignMode() const; //Returns the value of AlignMode
    inline void SetAlignMode(int value); //Sets the value of the AlignMode property

    /*
    Property AllowScriptAccess

    property AllowScriptAccess

    */
    inline QString AllowScriptAccess() const; //Returns the value of AllowScriptAccess
    inline void SetAllowScriptAccess(const QString& value); //Sets the value of the AllowScriptAccess property

    /*
    Property BGColor

    property BGColor

    */
    inline QString BGColor() const; //Returns the value of BGColor
    inline void SetBGColor(const QString& value); //Sets the value of the BGColor property

    /*
    Property BackgroundColor

    property BackgroundColor

    */
    inline int BackgroundColor() const; //Returns the value of BackgroundColor
    inline void SetBackgroundColor(int value); //Sets the value of the BackgroundColor property

    /*
    Property Base

    property Base

    */
    inline QString Base() const; //Returns the value of Base
    inline void SetBase(const QString& value); //Sets the value of the Base property

    /*
    Property DeviceFont

    property DeviceFont

    */
    inline bool DeviceFont() const; //Returns the value of DeviceFont
    inline void SetDeviceFont(bool value); //Sets the value of the DeviceFont property

    /*
    Property EmbedMovie

    property EmbedMovie

    */
    inline bool EmbedMovie() const; //Returns the value of EmbedMovie
    inline void SetEmbedMovie(bool value); //Sets the value of the EmbedMovie property

    /*
    Property FlashVars

    property FlashVars

    */
    inline QString FlashVars() const; //Returns the value of FlashVars
    inline void SetFlashVars(const QString& value); //Sets the value of the FlashVars property

    /*
    Property FrameNum

    property FrameNum

    */
    inline int FrameNum() const; //Returns the value of FrameNum
    inline void SetFrameNum(int value); //Sets the value of the FrameNum property

    /*
    Property Loop

    property Loop

    */
    inline bool Loop() const; //Returns the value of Loop
    inline void SetLoop(bool value); //Sets the value of the Loop property

    /*
    Property Menu

    property Menu

    */
    inline bool Menu() const; //Returns the value of Menu
    inline void SetMenu(bool value); //Sets the value of the Menu property

    /*
    Property Movie

    property Movie

    */
    inline QString Movie() const; //Returns the value of Movie
    inline void SetMovie(const QString& value); //Sets the value of the Movie property

    /*
    Property Playing

    property Playing

    */
    inline bool Playing() const; //Returns the value of Playing
    inline void SetPlaying(bool value); //Sets the value of the Playing property

    /*
    Property Quality

    property Quality

    */
    inline int Quality() const; //Returns the value of Quality
    inline void SetQuality(int value); //Sets the value of the Quality property

    /*
    Property Quality2

    property Quality2

    */
    inline QString Quality2() const; //Returns the value of Quality2
    inline void SetQuality2(const QString& value); //Sets the value of the Quality2 property

    /*
    Property ReadyState

    property ReadyState

    */
    inline int ReadyState() const; //Returns the value of ReadyState

    /*
    Property SAlign

    property SAlign

    */
    inline QString SAlign() const; //Returns the value of SAlign
    inline void SetSAlign(const QString& value); //Sets the value of the SAlign property

    /*
    Property SWRemote

    property SWRemote

    */
    inline QString SWRemote() const; //Returns the value of SWRemote
    inline void SetSWRemote(const QString& value); //Sets the value of the SWRemote property

    /*
    Property Scale

    property Scale

    */
    inline QString Scale() const; //Returns the value of Scale
    inline void SetScale(const QString& value); //Sets the value of the Scale property

    /*
    Property ScaleMode

    property ScaleMode

    */
    inline int ScaleMode() const; //Returns the value of ScaleMode
    inline void SetScaleMode(int value); //Sets the value of the ScaleMode property

    /*
    Property TotalFrames

    property TotalFrames

    */
    inline int TotalFrames() const; //Returns the value of TotalFrames

    /*
    Property WMode

    property WMode

    */
    inline QString WMode() const; //Returns the value of WMode
    inline void SetWMode(const QString& value); //Sets the value of the WMode property

    /*
    Method Back

    method Back

    */
    inline void Back();

    /*
    Method CurrentFrame

    method CurrentFrame

    */
    inline int CurrentFrame();

    /*
    Method FlashVersion

    method FlashVersion

    */
    inline int FlashVersion();

    /*
    Method Forward

    method Forward

    */
    inline void Forward();

    /*
    Method FrameLoaded

    method FrameLoaded

    */
    inline bool FrameLoaded(int FrameNum);

    /*
    Method GetVariable

    method GetVariable

    */
    inline QString GetVariable(const QString& name);

    /*
    Method GotoFrame

    method GotoFrame

    */
    inline void GotoFrame(int FrameNum);

    /*
    Method IsPlaying

    method IsPlaying

    */
    inline bool IsPlaying();

    /*
    Method LoadMovie

    method LoadMovie

    */
    inline void LoadMovie(int layer, const QString& url);

    /*
    Method Pan

    method Pan

    */
    inline void Pan(int x, int y, int mode);

    /*
    Method PercentLoaded

    method PercentLoaded

    */
    inline int PercentLoaded();

    /*
    Method Play

    method Play

    */
    inline void Play();

    /*
    Method Rewind

    method Rewind

    */
    inline void Rewind();

    /*
    Method SetVariable

    method SetVariable

    */
    inline void SetVariable(const QString& name, const QString& value);

    /*
    Method SetZoomRect

    method SetZoomRect

    */
    inline void SetZoomRect(int left, int top, int right, int bottom);

    /*
    Method Stop

    method Stop

    */
    inline void Stop();

    /*
    Method StopPlay

    method StopPlay

    */
    inline void StopPlay();

    /*
    Method TCallFrame

    method TCallFrame

    */
    inline void TCallFrame(const QString& target, int FrameNum);

    /*
    Method TCallLabel

    method TCallLabel

    */
    inline void TCallLabel(const QString& target, const QString& label);

    /*
    Method TCurrentFrame

    method TCurrentFrame

    */
    inline int TCurrentFrame(const QString& target);

    /*
    Method TCurrentLabel

    method TCurrentLabel

    */
    inline QString TCurrentLabel(const QString& target);

    /*
    Method TGetProperty

    method TGetProperty

    */
    inline QString TGetProperty(const QString& target, int property);

    /*
    Method TGetPropertyAsNumber

    method TGetPropertyAsNumber

    */
    inline double TGetPropertyAsNumber(const QString& target, int property);

    /*
    Method TGetPropertyNum

    method TGetPropertyNum

    */
    inline double TGetPropertyNum(const QString& target, int property);

    /*
    Method TGotoFrame

    method TGotoFrame

    */
    inline void TGotoFrame(const QString& target, int FrameNum);

    /*
    Method TGotoLabel

    method TGotoLabel

    */
    inline void TGotoLabel(const QString& target, const QString& label);

    /*
    Method TPlay

    method TPlay

    */
    inline void TPlay(const QString& target);

    /*
    Method TSetProperty

    method TSetProperty

    */
    inline void TSetProperty(const QString& target, int property, const QString& value);

    /*
    Method TSetPropertyNum

    method TSetPropertyNum

    */
    inline void TSetPropertyNum(const QString& target, int property, double value);

    /*
    Method TStopPlay

    method TStopPlay

    */
    inline void TStopPlay(const QString& target);

    /*
    Method Zoom

    method Zoom

    */
    inline void Zoom(int factor);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class SHOCKWAVEFLASHOBJECTS_EXPORT FlashProp : public QAxObject
{
public:
    FlashProp(QObject *parent = 0)
    : QAxObject(parent)
    {
        setControl("{1171a62f-05d2-11d1-83fc-00a0c9089c5a}");
    }

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class SHOCKWAVEFLASHOBJECTS_EXPORT FlashObjectInterface : public QAxObject
{
public:
    FlashObjectInterface(QObject *parent = 0)
    : QAxObject(parent)
    {
        setControl("{d27cdb71-ae6d-11cf-96b8-444553540000}");
    }

    FlashObjectInterface(IFlashObjectInterface *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// member function implementation
#ifndef QAX_DUMPCPP_SHOCKWAVEFLASHOBJECTS_NOINLINES
inline int IShockwaveFlash::AlignMode() const
{
    QVariant qax_result = property("AlignMode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IShockwaveFlash::SetAlignMode(int value){ setProperty("AlignMode", QVariant(value)); }

inline QString IShockwaveFlash::AllowScriptAccess() const
{
    QVariant qax_result = property("AllowScriptAccess");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IShockwaveFlash::SetAllowScriptAccess(const QString& value){ setProperty("AllowScriptAccess", QVariant(value)); }

inline QString IShockwaveFlash::BGColor() const
{
    QVariant qax_result = property("BGColor");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IShockwaveFlash::SetBGColor(const QString& value){ setProperty("BGColor", QVariant(value)); }

inline int IShockwaveFlash::BackgroundColor() const
{
    QVariant qax_result = property("BackgroundColor");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IShockwaveFlash::SetBackgroundColor(int value){ setProperty("BackgroundColor", QVariant(value)); }

inline QString IShockwaveFlash::Base() const
{
    QVariant qax_result = property("Base");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IShockwaveFlash::SetBase(const QString& value){ setProperty("Base", QVariant(value)); }

inline bool IShockwaveFlash::DeviceFont() const
{
    QVariant qax_result = property("DeviceFont");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IShockwaveFlash::SetDeviceFont(bool value){ setProperty("DeviceFont", QVariant(value)); }

inline bool IShockwaveFlash::EmbedMovie() const
{
    QVariant qax_result = property("EmbedMovie");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IShockwaveFlash::SetEmbedMovie(bool value){ setProperty("EmbedMovie", QVariant(value)); }

inline QString IShockwaveFlash::FlashVars() const
{
    QVariant qax_result = property("FlashVars");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IShockwaveFlash::SetFlashVars(const QString& value){ setProperty("FlashVars", QVariant(value)); }

inline int IShockwaveFlash::FrameNum() const
{
    QVariant qax_result = property("FrameNum");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IShockwaveFlash::SetFrameNum(int value){ setProperty("FrameNum", QVariant(value)); }

inline bool IShockwaveFlash::Loop() const
{
    QVariant qax_result = property("Loop");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IShockwaveFlash::SetLoop(bool value){ setProperty("Loop", QVariant(value)); }

inline bool IShockwaveFlash::Menu() const
{
    QVariant qax_result = property("Menu");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IShockwaveFlash::SetMenu(bool value){ setProperty("Menu", QVariant(value)); }

inline QString IShockwaveFlash::Movie() const
{
    QVariant qax_result = property("Movie");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IShockwaveFlash::SetMovie(const QString& value){ setProperty("Movie", QVariant(value)); }

inline bool IShockwaveFlash::Playing() const
{
    QVariant qax_result = property("Playing");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IShockwaveFlash::SetPlaying(bool value){ setProperty("Playing", QVariant(value)); }

inline int IShockwaveFlash::Quality() const
{
    QVariant qax_result = property("Quality");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IShockwaveFlash::SetQuality(int value){ setProperty("Quality", QVariant(value)); }

inline QString IShockwaveFlash::Quality2() const
{
    QVariant qax_result = property("Quality2");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IShockwaveFlash::SetQuality2(const QString& value){ setProperty("Quality2", QVariant(value)); }

inline int IShockwaveFlash::ReadyState() const
{
    QVariant qax_result = property("ReadyState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IShockwaveFlash::SAlign() const
{
    QVariant qax_result = property("SAlign");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IShockwaveFlash::SetSAlign(const QString& value){ setProperty("SAlign", QVariant(value)); }

inline QString IShockwaveFlash::SWRemote() const
{
    QVariant qax_result = property("SWRemote");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IShockwaveFlash::SetSWRemote(const QString& value){ setProperty("SWRemote", QVariant(value)); }

inline QString IShockwaveFlash::Scale() const
{
    QVariant qax_result = property("Scale");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IShockwaveFlash::SetScale(const QString& value){ setProperty("Scale", QVariant(value)); }

inline int IShockwaveFlash::ScaleMode() const
{
    QVariant qax_result = property("ScaleMode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IShockwaveFlash::SetScaleMode(int value){ setProperty("ScaleMode", QVariant(value)); }

inline int IShockwaveFlash::TotalFrames() const
{
    QVariant qax_result = property("TotalFrames");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString IShockwaveFlash::WMode() const
{
    QVariant qax_result = property("WMode");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IShockwaveFlash::SetWMode(const QString& value){ setProperty("WMode", QVariant(value)); }

inline void IShockwaveFlash::Back()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline int IShockwaveFlash::CurrentFrame()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int IShockwaveFlash::FlashVersion()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void IShockwaveFlash::Forward()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline bool IShockwaveFlash::FrameLoaded(int FrameNum)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FrameNum};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline QString IShockwaveFlash::GetVariable(const QString& name)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline void IShockwaveFlash::GotoFrame(int FrameNum)
{
    void *_a[] = {0, (void*)&FrameNum};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline bool IShockwaveFlash::IsPlaying()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline void IShockwaveFlash::LoadMovie(int layer, const QString& url)
{
    void *_a[] = {0, (void*)&layer, (void*)&url};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline void IShockwaveFlash::Pan(int x, int y, int mode)
{
    void *_a[] = {0, (void*)&x, (void*)&y, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline int IShockwaveFlash::PercentLoaded()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline void IShockwaveFlash::Play()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void IShockwaveFlash::Rewind()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void IShockwaveFlash::SetVariable(const QString& name, const QString& value)
{
    void *_a[] = {0, (void*)&name, (void*)&value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
}

inline void IShockwaveFlash::SetZoomRect(int left, int top, int right, int bottom)
{
    void *_a[] = {0, (void*)&left, (void*)&top, (void*)&right, (void*)&bottom};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
}

inline void IShockwaveFlash::Stop()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
}

inline void IShockwaveFlash::StopPlay()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
}

inline void IShockwaveFlash::TCallFrame(const QString& target, int FrameNum)
{
    void *_a[] = {0, (void*)&target, (void*)&FrameNum};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
}

inline void IShockwaveFlash::TCallLabel(const QString& target, const QString& label)
{
    void *_a[] = {0, (void*)&target, (void*)&label};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
}

inline int IShockwaveFlash::TCurrentFrame(const QString& target)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&target};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
    return qax_result;
}

inline QString IShockwaveFlash::TCurrentLabel(const QString& target)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&target};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}

inline QString IShockwaveFlash::TGetProperty(const QString& target, int property)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&target, (void*)&property};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
    return qax_result;
}

inline double IShockwaveFlash::TGetPropertyAsNumber(const QString& target, int property)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&target, (void*)&property};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
    return qax_result;
}

inline double IShockwaveFlash::TGetPropertyNum(const QString& target, int property)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&target, (void*)&property};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
    return qax_result;
}

inline void IShockwaveFlash::TGotoFrame(const QString& target, int FrameNum)
{
    void *_a[] = {0, (void*)&target, (void*)&FrameNum};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
}

inline void IShockwaveFlash::TGotoLabel(const QString& target, const QString& label)
{
    void *_a[] = {0, (void*)&target, (void*)&label};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
}

inline void IShockwaveFlash::TPlay(const QString& target)
{
    void *_a[] = {0, (void*)&target};
    qt_metacall(QMetaObject::InvokeMetaMethod, 53, _a);
}

inline void IShockwaveFlash::TSetProperty(const QString& target, int property, const QString& value)
{
    void *_a[] = {0, (void*)&target, (void*)&property, (void*)&value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
}

inline void IShockwaveFlash::TSetPropertyNum(const QString& target, int property, double value)
{
    void *_a[] = {0, (void*)&target, (void*)&property, (void*)&value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 55, _a);
}

inline void IShockwaveFlash::TStopPlay(const QString& target)
{
    void *_a[] = {0, (void*)&target};
    qt_metacall(QMetaObject::InvokeMetaMethod, 56, _a);
}

inline void IShockwaveFlash::Zoom(int factor)
{
    void *_a[] = {0, (void*)&factor};
    qt_metacall(QMetaObject::InvokeMetaMethod, 57, _a);
}


inline int ShockwaveFlash::AlignMode() const
{
    QVariant qax_result = property("AlignMode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ShockwaveFlash::SetAlignMode(int value){ setProperty("AlignMode", QVariant(value)); }

inline QString ShockwaveFlash::AllowScriptAccess() const
{
    QVariant qax_result = property("AllowScriptAccess");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ShockwaveFlash::SetAllowScriptAccess(const QString& value){ setProperty("AllowScriptAccess", QVariant(value)); }

inline QString ShockwaveFlash::BGColor() const
{
    QVariant qax_result = property("BGColor");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ShockwaveFlash::SetBGColor(const QString& value){ setProperty("BGColor", QVariant(value)); }

inline int ShockwaveFlash::BackgroundColor() const
{
    QVariant qax_result = property("BackgroundColor");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ShockwaveFlash::SetBackgroundColor(int value){ setProperty("BackgroundColor", QVariant(value)); }

inline QString ShockwaveFlash::Base() const
{
    QVariant qax_result = property("Base");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ShockwaveFlash::SetBase(const QString& value){ setProperty("Base", QVariant(value)); }

inline bool ShockwaveFlash::DeviceFont() const
{
    QVariant qax_result = property("DeviceFont");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void ShockwaveFlash::SetDeviceFont(bool value){ setProperty("DeviceFont", QVariant(value)); }

inline bool ShockwaveFlash::EmbedMovie() const
{
    QVariant qax_result = property("EmbedMovie");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void ShockwaveFlash::SetEmbedMovie(bool value){ setProperty("EmbedMovie", QVariant(value)); }

inline QString ShockwaveFlash::FlashVars() const
{
    QVariant qax_result = property("FlashVars");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ShockwaveFlash::SetFlashVars(const QString& value){ setProperty("FlashVars", QVariant(value)); }

inline int ShockwaveFlash::FrameNum() const
{
    QVariant qax_result = property("FrameNum");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ShockwaveFlash::SetFrameNum(int value){ setProperty("FrameNum", QVariant(value)); }

inline bool ShockwaveFlash::Loop() const
{
    QVariant qax_result = property("Loop");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void ShockwaveFlash::SetLoop(bool value){ setProperty("Loop", QVariant(value)); }

inline bool ShockwaveFlash::Menu() const
{
    QVariant qax_result = property("Menu");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void ShockwaveFlash::SetMenu(bool value){ setProperty("Menu", QVariant(value)); }

inline QString ShockwaveFlash::Movie() const
{
    QVariant qax_result = property("Movie");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ShockwaveFlash::SetMovie(const QString& value){ setProperty("Movie", QVariant(value)); }

inline bool ShockwaveFlash::Playing() const
{
    QVariant qax_result = property("Playing");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void ShockwaveFlash::SetPlaying(bool value){ setProperty("Playing", QVariant(value)); }

inline int ShockwaveFlash::Quality() const
{
    QVariant qax_result = property("Quality");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ShockwaveFlash::SetQuality(int value){ setProperty("Quality", QVariant(value)); }

inline QString ShockwaveFlash::Quality2() const
{
    QVariant qax_result = property("Quality2");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ShockwaveFlash::SetQuality2(const QString& value){ setProperty("Quality2", QVariant(value)); }

inline int ShockwaveFlash::ReadyState() const
{
    QVariant qax_result = property("ReadyState");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString ShockwaveFlash::SAlign() const
{
    QVariant qax_result = property("SAlign");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ShockwaveFlash::SetSAlign(const QString& value){ setProperty("SAlign", QVariant(value)); }

inline QString ShockwaveFlash::SWRemote() const
{
    QVariant qax_result = property("SWRemote");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ShockwaveFlash::SetSWRemote(const QString& value){ setProperty("SWRemote", QVariant(value)); }

inline QString ShockwaveFlash::Scale() const
{
    QVariant qax_result = property("Scale");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ShockwaveFlash::SetScale(const QString& value){ setProperty("Scale", QVariant(value)); }

inline int ShockwaveFlash::ScaleMode() const
{
    QVariant qax_result = property("ScaleMode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ShockwaveFlash::SetScaleMode(int value){ setProperty("ScaleMode", QVariant(value)); }

inline int ShockwaveFlash::TotalFrames() const
{
    QVariant qax_result = property("TotalFrames");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString ShockwaveFlash::WMode() const
{
    QVariant qax_result = property("WMode");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ShockwaveFlash::SetWMode(const QString& value){ setProperty("WMode", QVariant(value)); }

inline void ShockwaveFlash::Back()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
}

inline int ShockwaveFlash::CurrentFrame()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}

inline int ShockwaveFlash::FlashVersion()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline void ShockwaveFlash::Forward()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
}

inline bool ShockwaveFlash::FrameLoaded(int FrameNum)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FrameNum};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline QString ShockwaveFlash::GetVariable(const QString& name)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline void ShockwaveFlash::GotoFrame(int FrameNum)
{
    void *_a[] = {0, (void*)&FrameNum};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
}

inline bool ShockwaveFlash::IsPlaying()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline void ShockwaveFlash::LoadMovie(int layer, const QString& url)
{
    void *_a[] = {0, (void*)&layer, (void*)&url};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
}

inline void ShockwaveFlash::Pan(int x, int y, int mode)
{
    void *_a[] = {0, (void*)&x, (void*)&y, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
}

inline int ShockwaveFlash::PercentLoaded()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}

inline void ShockwaveFlash::Play()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
}

inline void ShockwaveFlash::Rewind()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
}

inline void ShockwaveFlash::SetVariable(const QString& name, const QString& value)
{
    void *_a[] = {0, (void*)&name, (void*)&value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 65, _a);
}

inline void ShockwaveFlash::SetZoomRect(int left, int top, int right, int bottom)
{
    void *_a[] = {0, (void*)&left, (void*)&top, (void*)&right, (void*)&bottom};
    qt_metacall(QMetaObject::InvokeMetaMethod, 67, _a);
}

inline void ShockwaveFlash::Stop()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 68, _a);
}

inline void ShockwaveFlash::StopPlay()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 69, _a);
}

inline void ShockwaveFlash::TCallFrame(const QString& target, int FrameNum)
{
    void *_a[] = {0, (void*)&target, (void*)&FrameNum};
    qt_metacall(QMetaObject::InvokeMetaMethod, 70, _a);
}

inline void ShockwaveFlash::TCallLabel(const QString& target, const QString& label)
{
    void *_a[] = {0, (void*)&target, (void*)&label};
    qt_metacall(QMetaObject::InvokeMetaMethod, 71, _a);
}

inline int ShockwaveFlash::TCurrentFrame(const QString& target)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&target};
    qt_metacall(QMetaObject::InvokeMetaMethod, 72, _a);
    return qax_result;
}

inline QString ShockwaveFlash::TCurrentLabel(const QString& target)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&target};
    qt_metacall(QMetaObject::InvokeMetaMethod, 73, _a);
    return qax_result;
}

inline QString ShockwaveFlash::TGetProperty(const QString& target, int property)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&target, (void*)&property};
    qt_metacall(QMetaObject::InvokeMetaMethod, 74, _a);
    return qax_result;
}

inline double ShockwaveFlash::TGetPropertyAsNumber(const QString& target, int property)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&target, (void*)&property};
    qt_metacall(QMetaObject::InvokeMetaMethod, 75, _a);
    return qax_result;
}

inline double ShockwaveFlash::TGetPropertyNum(const QString& target, int property)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&target, (void*)&property};
    qt_metacall(QMetaObject::InvokeMetaMethod, 76, _a);
    return qax_result;
}

inline void ShockwaveFlash::TGotoFrame(const QString& target, int FrameNum)
{
    void *_a[] = {0, (void*)&target, (void*)&FrameNum};
    qt_metacall(QMetaObject::InvokeMetaMethod, 77, _a);
}

inline void ShockwaveFlash::TGotoLabel(const QString& target, const QString& label)
{
    void *_a[] = {0, (void*)&target, (void*)&label};
    qt_metacall(QMetaObject::InvokeMetaMethod, 78, _a);
}

inline void ShockwaveFlash::TPlay(const QString& target)
{
    void *_a[] = {0, (void*)&target};
    qt_metacall(QMetaObject::InvokeMetaMethod, 79, _a);
}

inline void ShockwaveFlash::TSetProperty(const QString& target, int property, const QString& value)
{
    void *_a[] = {0, (void*)&target, (void*)&property, (void*)&value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 80, _a);
}

inline void ShockwaveFlash::TSetPropertyNum(const QString& target, int property, double value)
{
    void *_a[] = {0, (void*)&target, (void*)&property, (void*)&value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 81, _a);
}

inline void ShockwaveFlash::TStopPlay(const QString& target)
{
    void *_a[] = {0, (void*)&target};
    qt_metacall(QMetaObject::InvokeMetaMethod, 82, _a);
}

inline void ShockwaveFlash::Zoom(int factor)
{
    void *_a[] = {0, (void*)&factor};
    qt_metacall(QMetaObject::InvokeMetaMethod, 83, _a);
}





#endif

}

template<>
inline void *qMetaTypeConstructHelper(const ShockwaveFlashObjects::IShockwaveFlash *t)
{ Q_ASSERT(!t); return new ShockwaveFlashObjects::IShockwaveFlash; }

template<>
inline void *qMetaTypeConstructHelper(const ShockwaveFlashObjects::ShockwaveFlash *t)
{ Q_ASSERT(!t); return new ShockwaveFlashObjects::ShockwaveFlash; }

template<>
inline void *qMetaTypeConstructHelper(const ShockwaveFlashObjects::FlashProp *t)
{ Q_ASSERT(!t); return new ShockwaveFlashObjects::FlashProp; }

template<>
inline void *qMetaTypeConstructHelper(const ShockwaveFlashObjects::FlashObjectInterface *t)
{ Q_ASSERT(!t); return new ShockwaveFlashObjects::FlashObjectInterface; }

#endif

